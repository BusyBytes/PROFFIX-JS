/**
 * PROFFIX REST API Request Sammlung
 * Dies ist eine Request-Sammlung der PROFFIX REST API, welche das PROFFIX REST API Entwicklerhandbuch unter [https://www.proffix.net/entwickler/restapi/handbuch](https://www.proffix.net/entwickler/restapi/handbuch) erg√§nzt.
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProffixRestApiRequestSammlung);
  }
}(this, function(expect, ProffixRestApiRequestSammlung) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProffixRestApiRequestSammlung.AUFApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AUFApi', function() {
    describe('aUFDokument', function() {
      it('should call aUFDokument successfully', function(done) {
        //uncomment below and update the code to test aUFDokument
        //instance.aUFDokument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('aUFDokumentDokumentNr', function() {
      it('should call aUFDokumentDokumentNr successfully', function(done) {
        //uncomment below and update the code to test aUFDokumentDokumentNr
        //instance.aUFDokumentDokumentNr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('aUFDokumentDokumentNrentsperren', function() {
      it('should call aUFDokumentDokumentNrentsperren successfully', function(done) {
        //uncomment below and update the code to test aUFDokumentDokumentNrentsperren
        //instance.aUFDokumentDokumentNrentsperren(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('aUFDokumentDokumentNrstatusentfernen', function() {
      it('should call aUFDokumentDokumentNrstatusentfernen successfully', function(done) {
        //uncomment below and update the code to test aUFDokumentDokumentNrstatusentfernen
        //instance.aUFDokumentDokumentNrstatusentfernen(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('aUFDokumentDokumentNrteilrechnungerstellen', function() {
      it('should call aUFDokumentDokumentNrteilrechnungerstellen successfully', function(done) {
        //uncomment below and update the code to test aUFDokumentDokumentNrteilrechnungerstellen
        //instance.aUFDokumentDokumentNrteilrechnungerstellen(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('aUFDokumentDokumentNrumwandeln', function() {
      it('should call aUFDokumentDokumentNrumwandeln successfully', function(done) {
        //uncomment below and update the code to test aUFDokumentDokumentNrumwandeln
        //instance.aUFDokumentDokumentNrumwandeln(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('aUFDokumentstatusDokumentstatusNr', function() {
      it('should call aUFDokumentstatusDokumentstatusNr successfully', function(done) {
        //uncomment below and update the code to test aUFDokumentstatusDokumentstatusNr
        //instance.aUFDokumentstatusDokumentstatusNr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('aUFDokumenttypDokumenttypNr', function() {
      it('should call aUFDokumenttypDokumenttypNr successfully', function(done) {
        //uncomment below and update the code to test aUFDokumenttypDokumenttypNr
        //instance.aUFDokumenttypDokumenttypNr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('aUFDokumentverknuepfungDokumentverknuepfungNr', function() {
      it('should call aUFDokumentverknuepfungDokumentverknuepfungNr successfully', function(done) {
        //uncomment below and update the code to test aUFDokumentverknuepfungDokumentverknuepfungNr
        //instance.aUFDokumentverknuepfungDokumentverknuepfungNr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('aUFESRNummerESRNr', function() {
      it('should call aUFESRNummerESRNr successfully', function(done) {
        //uncomment below and update the code to test aUFESRNummerESRNr
        //instance.aUFESRNummerESRNr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('aUFGutschein', function() {
      it('should call aUFGutschein successfully', function(done) {
        //uncomment below and update the code to test aUFGutschein
        //instance.aUFGutschein(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('aUFGutscheinGutscheinNr', function() {
      it('should call aUFGutscheinGutscheinNr successfully', function(done) {
        //uncomment below and update the code to test aUFGutscheinGutscheinNr
        //instance.aUFGutscheinGutscheinNr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('aUFGutscheingutscheinnrgenerieren', function() {
      it('should call aUFGutscheingutscheinnrgenerieren successfully', function(done) {
        //uncomment below and update the code to test aUFGutscheingutscheinnrgenerieren
        //instance.aUFGutscheingutscheinnrgenerieren(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('aUFOccasionsobjektOccasionsobjektNr', function() {
      it('should call aUFOccasionsobjektOccasionsobjektNr successfully', function(done) {
        //uncomment below and update the code to test aUFOccasionsobjektOccasionsobjektNr
        //instance.aUFOccasionsobjektOccasionsobjektNr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('aUFTextTextNr', function() {
      it('should call aUFTextTextNr successfully', function(done) {
        //uncomment below and update the code to test aUFTextTextNr
        //instance.aUFTextTextNr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('aUFZuschlagZuschlagNr', function() {
      it('should call aUFZuschlagZuschlagNr successfully', function(done) {
        //uncomment below and update the code to test aUFZuschlagZuschlagNr
        //instance.aUFZuschlagZuschlagNr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
