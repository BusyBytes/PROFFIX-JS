/**
 * PROFFIX REST API Request Sammlung
 * Dies ist eine Request-Sammlung der PROFFIX REST API, welche das PROFFIX REST API Entwicklerhandbuch unter [https://www.proffix.net/entwickler/restapi/handbuch](https://www.proffix.net/entwickler/restapi/handbuch) erg√§nzt.
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProffixRestApiRequestSammlung);
  }
}(this, function(expect, ProffixRestApiRequestSammlung) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProffixRestApiRequestSammlung.Positionen8();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Positionen8', function() {
    it('should create an instance of Positionen8', function() {
      // uncomment below and update the code to test Positionen8
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be.a(ProffixRestApiRequestSammlung.Positionen8);
    });

    it('should have the property positionNr (base name: "PositionNr")', function() {
      // uncomment below and update the code to test the property positionNr
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property originalRapportNr (base name: "OriginalRapportNr")', function() {
      // uncomment below and update the code to test the property originalRapportNr
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property installation (base name: "Installation")', function() {
      // uncomment below and update the code to test the property installation
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property prioritaet (base name: "Prioritaet")', function() {
      // uncomment below and update the code to test the property prioritaet
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property betreueradresse (base name: "Betreueradresse")', function() {
      // uncomment below and update the code to test the property betreueradresse
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property externadresse (base name: "Externadresse")', function() {
      // uncomment below and update the code to test the property externadresse
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property bezeichnung1 (base name: "Bezeichnung1")', function() {
      // uncomment below and update the code to test the property bezeichnung1
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property vertragstyp (base name: "Vertragstyp")', function() {
      // uncomment below and update the code to test the property vertragstyp
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property konfigurationsID (base name: "KonfigurationsID")', function() {
      // uncomment below and update the code to test the property konfigurationsID
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property seriennummer (base name: "Seriennummer")', function() {
      // uncomment below and update the code to test the property seriennummer
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property produktNr (base name: "ProduktNr")', function() {
      // uncomment below and update the code to test the property produktNr
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property auftrag (base name: "Auftrag")', function() {
      // uncomment below and update the code to test the property auftrag
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property standort (base name: "Standort")', function() {
      // uncomment below and update the code to test the property standort
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property garantiezusatz (base name: "Garantiezusatz")', function() {
      // uncomment below and update the code to test the property garantiezusatz
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property installationstermin (base name: "Installationstermin")', function() {
      // uncomment below and update the code to test the property installationstermin
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property garantieende (base name: "Garantieende")', function() {
      // uncomment below and update the code to test the property garantieende
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property herstellerVertrag (base name: "HerstellerVertrag")', function() {
      // uncomment below and update the code to test the property herstellerVertrag
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property auftragProblem (base name: "AuftragProblem")', function() {
      // uncomment below and update the code to test the property auftragProblem
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property auftragProblemRTF (base name: "AuftragProblemRTF")', function() {
      // uncomment below and update the code to test the property auftragProblemRTF
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property mitarbeiter (base name: "Mitarbeiter")', function() {
      // uncomment below and update the code to test the property mitarbeiter
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property datumZeit (base name: "DatumZeit")', function() {
      // uncomment below and update the code to test the property datumZeit
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property startdatumZeit (base name: "StartdatumZeit")', function() {
      // uncomment below and update the code to test the property startdatumZeit
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property enddatumZeit (base name: "EnddatumZeit")', function() {
      // uncomment below and update the code to test the property enddatumZeit
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property termin (base name: "Termin")', function() {
      // uncomment below and update the code to test the property termin
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property fixTermin (base name: "FixTermin")', function() {
      // uncomment below and update the code to test the property fixTermin
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property planzeit (base name: "Planzeit")', function() {
      // uncomment below and update the code to test the property planzeit
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property kundenbestellreferenz (base name: "Kundenbestellreferenz")', function() {
      // uncomment below and update the code to test the property kundenbestellreferenz
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property erstelltAm (base name: "ErstelltAm")', function() {
      // uncomment below and update the code to test the property erstelltAm
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property erstelltVon (base name: "ErstelltVon")', function() {
      // uncomment below and update the code to test the property erstelltVon
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property geaendertAm (base name: "GeaendertAm")', function() {
      // uncomment below and update the code to test the property geaendertAm
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property geaendertVon (base name: "GeaendertVon")', function() {
      // uncomment below and update the code to test the property geaendertVon
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

    it('should have the property zusatzfelder (base name: "Zusatzfelder")', function() {
      // uncomment below and update the code to test the property zusatzfelder
      //var instance = new ProffixRestApiRequestSammlung.Positionen8();
      //expect(instance).to.be();
    });

  });

}));
