/**
 * PROFFIX REST API Request Sammlung
 * Dies ist eine Request-Sammlung der PROFFIX REST API, welche das PROFFIX REST API Entwicklerhandbuch unter [https://www.proffix.net/entwickler/restapi/handbuch](https://www.proffix.net/entwickler/restapi/handbuch) erg√§nzt.
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProffixRestApiRequestSammlung);
  }
}(this, function(expect, ProffixRestApiRequestSammlung) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PROMitarbeiterRequest', function() {
    it('should create an instance of PROMitarbeiterRequest', function() {
      // uncomment below and update the code to test PROMitarbeiterRequest
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be.a(ProffixRestApiRequestSammlung.PROMitarbeiterRequest);
    });

    it('should have the property mitarbeiterNr (base name: "MitarbeiterNr")', function() {
      // uncomment below and update the code to test the property mitarbeiterNr
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property kurzzeichen (base name: "Kurzzeichen")', function() {
      // uncomment below and update the code to test the property kurzzeichen
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property adresse (base name: "Adresse")', function() {
      // uncomment below and update the code to test the property adresse
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property positionsart (base name: "Positionsart")', function() {
      // uncomment below and update the code to test the property positionsart
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property stundenart (base name: "Stundenart")', function() {
      // uncomment below and update the code to test the property stundenart
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property feriensaldo (base name: "Feriensaldo")', function() {
      // uncomment below and update the code to test the property feriensaldo
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property badgeID (base name: "BadgeID")', function() {
      // uncomment below and update the code to test the property badgeID
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property geloescht (base name: "Geloescht")', function() {
      // uncomment below and update the code to test the property geloescht
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property benutzergruppe (base name: "Benutzergruppe")', function() {
      // uncomment below and update the code to test the property benutzergruppe
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property bemerkungen (base name: "Bemerkungen")', function() {
      // uncomment below and update the code to test the property bemerkungen
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property bemerkungenLeistungsverwaltung (base name: "BemerkungenLeistungsverwaltung")', function() {
      // uncomment below and update the code to test the property bemerkungenLeistungsverwaltung
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property bemerkungenZeitverwaltung (base name: "BemerkungenZeitverwaltung")', function() {
      // uncomment below and update the code to test the property bemerkungenZeitverwaltung
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property austrittsdatum (base name: "Austrittsdatum")', function() {
      // uncomment below and update the code to test the property austrittsdatum
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property eintrittsdatum (base name: "Eintrittsdatum")', function() {
      // uncomment below and update the code to test the property eintrittsdatum
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property erstelltAm (base name: "ErstelltAm")', function() {
      // uncomment below and update the code to test the property erstelltAm
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property erstelltVon (base name: "ErstelltVon")', function() {
      // uncomment below and update the code to test the property erstelltVon
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property geaendertAm (base name: "GeaendertAm")', function() {
      // uncomment below and update the code to test the property geaendertAm
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property geaendertVon (base name: "GeaendertVon")', function() {
      // uncomment below and update the code to test the property geaendertVon
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

    it('should have the property zusatzfelder (base name: "Zusatzfelder")', function() {
      // uncomment below and update the code to test the property zusatzfelder
      //var instance = new ProffixRestApiRequestSammlung.PROMitarbeiterRequest();
      //expect(instance).to.be();
    });

  });

}));
