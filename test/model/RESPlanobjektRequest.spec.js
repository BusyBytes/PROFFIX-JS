/**
 * PROFFIX REST API Request Sammlung
 * Dies ist eine Request-Sammlung der PROFFIX REST API, welche das PROFFIX REST API Entwicklerhandbuch unter [https://www.proffix.net/entwickler/restapi/handbuch](https://www.proffix.net/entwickler/restapi/handbuch) erg√§nzt.
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProffixRestApiRequestSammlung);
  }
}(this, function(expect, ProffixRestApiRequestSammlung) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RESPlanobjektRequest', function() {
    it('should create an instance of RESPlanobjektRequest', function() {
      // uncomment below and update the code to test RESPlanobjektRequest
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be.a(ProffixRestApiRequestSammlung.RESPlanobjektRequest);
    });

    it('should have the property planobjektNr (base name: "PlanobjektNr")', function() {
      // uncomment below and update the code to test the property planobjektNr
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property adresse (base name: "Adresse")', function() {
      // uncomment below and update the code to test the property adresse
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property aufgabe (base name: "Aufgabe")', function() {
      // uncomment below and update the code to test the property aufgabe
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property auftrag (base name: "Auftrag")', function() {
      // uncomment below and update the code to test the property auftrag
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property serviceauftrag (base name: "Serviceauftrag")', function() {
      // uncomment below and update the code to test the property serviceauftrag
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property beginn (base name: "Beginn")', function() {
      // uncomment below and update the code to test the property beginn
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property bemerkungen (base name: "Bemerkungen")', function() {
      // uncomment below and update the code to test the property bemerkungen
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property bezeichnung (base name: "Bezeichnung")', function() {
      // uncomment below and update the code to test the property bezeichnung
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsdatum (base name: "Rechnungsdatum")', function() {
      // uncomment below and update the code to test the property rechnungsdatum
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property dokument (base name: "Dokument")', function() {
      // uncomment below and update the code to test the property dokument
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property ende (base name: "Ende")', function() {
      // uncomment below and update the code to test the property ende
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property farbe (base name: "Farbe")', function() {
      // uncomment below and update the code to test the property farbe
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property ganztaegig (base name: "Ganztaegig")', function() {
      // uncomment below and update the code to test the property ganztaegig
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property kontakt (base name: "Kontakt")', function() {
      // uncomment below and update the code to test the property kontakt
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property menge (base name: "Menge")', function() {
      // uncomment below and update the code to test the property menge
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property planobjektgruppenNr (base name: "PlanobjektgruppenNr")', function() {
      // uncomment below and update the code to test the property planobjektgruppenNr
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property serviceauftragspositionNr (base name: "ServiceauftragspositionNr")', function() {
      // uncomment below and update the code to test the property serviceauftragspositionNr
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property ressource (base name: "Ressource")', function() {
      // uncomment below and update the code to test the property ressource
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property planobjektstatus (base name: "Planobjektstatus")', function() {
      // uncomment below and update the code to test the property planobjektstatus
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property planobjektgruppe (base name: "Planobjektgruppe")', function() {
      // uncomment below and update the code to test the property planobjektgruppe
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property erstelltAm (base name: "ErstelltAm")', function() {
      // uncomment below and update the code to test the property erstelltAm
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property erstelltVon (base name: "ErstelltVon")', function() {
      // uncomment below and update the code to test the property erstelltVon
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property geaendertAm (base name: "GeaendertAm")', function() {
      // uncomment below and update the code to test the property geaendertAm
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property geaendertVon (base name: "GeaendertVon")', function() {
      // uncomment below and update the code to test the property geaendertVon
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

    it('should have the property zusatzfelder (base name: "Zusatzfelder")', function() {
      // uncomment below and update the code to test the property zusatzfelder
      //var instance = new ProffixRestApiRequestSammlung.RESPlanobjektRequest();
      //expect(instance).to.be();
    });

  });

}));
