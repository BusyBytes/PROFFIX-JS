/**
 * PROFFIX REST API Request Sammlung
 * Dies ist eine Request-Sammlung der PROFFIX REST API, welche das PROFFIX REST API Entwicklerhandbuch unter [https://www.proffix.net/entwickler/restapi/handbuch](https://www.proffix.net/entwickler/restapi/handbuch) erg√§nzt.
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProffixRestApiRequestSammlung);
  }
}(this, function(expect, ProffixRestApiRequestSammlung) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Zusatzfelder', function() {
    it('should create an instance of Zusatzfelder', function() {
      // uncomment below and update the code to test Zusatzfelder
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be.a(ProffixRestApiRequestSammlung.Zusatzfelder);
    });

    it('should have the property zAblaufVersicherungskarte (base name: "Z_Ablauf_Versicherungskarte")', function() {
      // uncomment below and update the code to test the property zAblaufVersicherungskarte
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zAbwart (base name: "Z_Abwart")', function() {
      // uncomment below and update the code to test the property zAbwart
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zAHVNr (base name: "Z_AHV_Nr")', function() {
      // uncomment below and update the code to test the property zAHVNr
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zAnreiseMit (base name: "Z_Anreise_mit")', function() {
      // uncomment below and update the code to test the property zAnreiseMit
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zArbeitgeber (base name: "Z_Arbeitgeber")', function() {
      // uncomment below and update the code to test the property zArbeitgeber
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zBemerkungen (base name: "Z_Bemerkungen")', function() {
      // uncomment below and update the code to test the property zBemerkungen
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zBranche (base name: "Z_Branche")', function() {
      // uncomment below and update the code to test the property zBranche
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zDistanzFRLSVA (base name: "Z_Distanz_f_r_LSVA")', function() {
      // uncomment below and update the code to test the property zDistanzFRLSVA
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zEigentMer (base name: "Z_Eigent_mer")', function() {
      // uncomment below and update the code to test the property zEigentMer
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zErreichbarBis (base name: "Z_Erreichbar_bis")', function() {
      // uncomment below and update the code to test the property zErreichbarBis
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zGegrNdet (base name: "Z_Gegr_ndet")', function() {
      // uncomment below and update the code to test the property zGegrNdet
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zGeschlecht (base name: "Z_Geschlecht")', function() {
      // uncomment below and update the code to test the property zGeschlecht
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zInfo (base name: "Z_Info")', function() {
      // uncomment below and update the code to test the property zInfo
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zKontaktfrequenz (base name: "Z_Kontaktfrequenz")', function() {
      // uncomment below and update the code to test the property zKontaktfrequenz
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zMieter (base name: "Z_Mieter")', function() {
      // uncomment below and update the code to test the property zMieter
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zMitarbeiter (base name: "Z_Mitarbeiter")', function() {
      // uncomment below and update the code to test the property zMitarbeiter
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zMitgliedVerband (base name: "Z_Mitglied_Verband")', function() {
      // uncomment below and update the code to test the property zMitgliedVerband
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zRechnungsstellungsmethode (base name: "Z_Rechnungsstellungsmethode")', function() {
      // uncomment below and update the code to test the property zRechnungsstellungsmethode
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zVersichertenNr (base name: "Z_Versicherten_Nr")', function() {
      // uncomment below and update the code to test the property zVersichertenNr
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zVersichrung (base name: "Z_Versichrung")', function() {
      // uncomment below and update the code to test the property zVersichrung
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

    it('should have the property zZSRNummer (base name: "Z_ZSR_Nummer")', function() {
      // uncomment below and update the code to test the property zZSRNummer
      //var instance = new ProffixRestApiRequestSammlung.Zusatzfelder();
      //expect(instance).to.be();
    });

  });

}));
