/**
 * PROFFIX REST API Request Sammlung
 * Dies ist eine Request-Sammlung der PROFFIX REST API, welche das PROFFIX REST API Entwicklerhandbuch unter [https://www.proffix.net/entwickler/restapi/handbuch](https://www.proffix.net/entwickler/restapi/handbuch) erg√§nzt.
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProffixRestApiRequestSammlung);
  }
}(this, function(expect, ProffixRestApiRequestSammlung) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProffixRestApiRequestSammlung.LOHLohnbewegungRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LOHLohnbewegungRequest', function() {
    it('should create an instance of LOHLohnbewegungRequest', function() {
      // uncomment below and update the code to test LOHLohnbewegungRequest
      //var instance = new ProffixRestApiRequestSammlung.LOHLohnbewegungRequest();
      //expect(instance).to.be.a(ProffixRestApiRequestSammlung.LOHLohnbewegungRequest);
    });

    it('should have the property lohnbewegungNr (base name: "LohnbewegungNr")', function() {
      // uncomment below and update the code to test the property lohnbewegungNr
      //var instance = new ProffixRestApiRequestSammlung.LOHLohnbewegungRequest();
      //expect(instance).to.be();
    });

    it('should have the property mitarbeiter (base name: "Mitarbeiter")', function() {
      // uncomment below and update the code to test the property mitarbeiter
      //var instance = new ProffixRestApiRequestSammlung.LOHLohnbewegungRequest();
      //expect(instance).to.be();
    });

    it('should have the property lohnart (base name: "Lohnart")', function() {
      // uncomment below and update the code to test the property lohnart
      //var instance = new ProffixRestApiRequestSammlung.LOHLohnbewegungRequest();
      //expect(instance).to.be();
    });

    it('should have the property vonPeriode (base name: "VonPeriode")', function() {
      // uncomment below and update the code to test the property vonPeriode
      //var instance = new ProffixRestApiRequestSammlung.LOHLohnbewegungRequest();
      //expect(instance).to.be();
    });

    it('should have the property bisPeriode (base name: "BisPeriode")', function() {
      // uncomment below and update the code to test the property bisPeriode
      //var instance = new ProffixRestApiRequestSammlung.LOHLohnbewegungRequest();
      //expect(instance).to.be();
    });

    it('should have the property verrechnet (base name: "Verrechnet")', function() {
      // uncomment below and update the code to test the property verrechnet
      //var instance = new ProffixRestApiRequestSammlung.LOHLohnbewegungRequest();
      //expect(instance).to.be();
    });

    it('should have the property ansatz (base name: "Ansatz")', function() {
      // uncomment below and update the code to test the property ansatz
      //var instance = new ProffixRestApiRequestSammlung.LOHLohnbewegungRequest();
      //expect(instance).to.be();
    });

    it('should have the property auftrag (base name: "Auftrag")', function() {
      // uncomment below and update the code to test the property auftrag
      //var instance = new ProffixRestApiRequestSammlung.LOHLohnbewegungRequest();
      //expect(instance).to.be();
    });

    it('should have the property betrag (base name: "Betrag")', function() {
      // uncomment below and update the code to test the property betrag
      //var instance = new ProffixRestApiRequestSammlung.LOHLohnbewegungRequest();
      //expect(instance).to.be();
    });

    it('should have the property bezeichnung (base name: "Bezeichnung")', function() {
      // uncomment below and update the code to test the property bezeichnung
      //var instance = new ProffixRestApiRequestSammlung.LOHLohnbewegungRequest();
      //expect(instance).to.be();
    });

    it('should have the property buchungsbewegungen (base name: "Buchungsbewegungen")', function() {
      // uncomment below and update the code to test the property buchungsbewegungen
      //var instance = new ProffixRestApiRequestSammlung.LOHLohnbewegungRequest();
      //expect(instance).to.be();
    });

    it('should have the property menge (base name: "Menge")', function() {
      // uncomment below and update the code to test the property menge
      //var instance = new ProffixRestApiRequestSammlung.LOHLohnbewegungRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuercode (base name: "Steuercode")', function() {
      // uncomment below and update the code to test the property steuercode
      //var instance = new ProffixRestApiRequestSammlung.LOHLohnbewegungRequest();
      //expect(instance).to.be();
    });

  });

}));
