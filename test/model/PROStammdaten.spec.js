/**
 * PROFFIX REST API Request Sammlung
 * Dies ist eine Request-Sammlung der PROFFIX REST API, welche das PROFFIX REST API Entwicklerhandbuch unter [https://www.proffix.net/entwickler/restapi/handbuch](https://www.proffix.net/entwickler/restapi/handbuch) erg√§nzt.
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProffixRestApiRequestSammlung);
  }
}(this, function(expect, ProffixRestApiRequestSammlung) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProffixRestApiRequestSammlung.PROStammdaten();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PROStammdaten', function() {
    it('should create an instance of PROStammdaten', function() {
      // uncomment below and update the code to test PROStammdaten
      //var instance = new ProffixRestApiRequestSammlung.PROStammdaten();
      //expect(instance).to.be.a(ProffixRestApiRequestSammlung.PROStammdaten);
    });

    it('should have the property anschrift (base name: "Anschrift")', function() {
      // uncomment below and update the code to test the property anschrift
      //var instance = new ProffixRestApiRequestSammlung.PROStammdaten();
      //expect(instance).to.be();
    });

    it('should have the property berechtigung (base name: "Berechtigung")', function() {
      // uncomment below and update the code to test the property berechtigung
      //var instance = new ProffixRestApiRequestSammlung.PROStammdaten();
      //expect(instance).to.be();
    });

    it('should have the property eMail (base name: "EMail")', function() {
      // uncomment below and update the code to test the property eMail
      //var instance = new ProffixRestApiRequestSammlung.PROStammdaten();
      //expect(instance).to.be();
    });

    it('should have the property fax (base name: "Fax")', function() {
      // uncomment below and update the code to test the property fax
      //var instance = new ProffixRestApiRequestSammlung.PROStammdaten();
      //expect(instance).to.be();
    });

    it('should have the property firma (base name: "Firma")', function() {
      // uncomment below and update the code to test the property firma
      //var instance = new ProffixRestApiRequestSammlung.PROStammdaten();
      //expect(instance).to.be();
    });

    it('should have the property homepage (base name: "Homepage")', function() {
      // uncomment below and update the code to test the property homepage
      //var instance = new ProffixRestApiRequestSammlung.PROStammdaten();
      //expect(instance).to.be();
    });

    it('should have the property noAutoLogin (base name: "NoAutoLogin")', function() {
      // uncomment below and update the code to test the property noAutoLogin
      //var instance = new ProffixRestApiRequestSammlung.PROStammdaten();
      //expect(instance).to.be();
    });

    it('should have the property ort (base name: "Ort")', function() {
      // uncomment below and update the code to test the property ort
      //var instance = new ProffixRestApiRequestSammlung.PROStammdaten();
      //expect(instance).to.be();
    });

    it('should have the property PLZ (base name: "PLZ")', function() {
      // uncomment below and update the code to test the property PLZ
      //var instance = new ProffixRestApiRequestSammlung.PROStammdaten();
      //expect(instance).to.be();
    });

    it('should have the property sprache (base name: "Sprache")', function() {
      // uncomment below and update the code to test the property sprache
      //var instance = new ProffixRestApiRequestSammlung.PROStammdaten();
      //expect(instance).to.be();
    });

    it('should have the property strasse (base name: "Strasse")', function() {
      // uncomment below and update the code to test the property strasse
      //var instance = new ProffixRestApiRequestSammlung.PROStammdaten();
      //expect(instance).to.be();
    });

    it('should have the property telefon (base name: "Telefon")', function() {
      // uncomment below and update the code to test the property telefon
      //var instance = new ProffixRestApiRequestSammlung.PROStammdaten();
      //expect(instance).to.be();
    });

  });

}));
