/**
 * PROFFIX REST API Request Sammlung
 * Dies ist eine Request-Sammlung der PROFFIX REST API, welche das PROFFIX REST API Entwicklerhandbuch unter [https://www.proffix.net/entwickler/restapi/handbuch](https://www.proffix.net/entwickler/restapi/handbuch) erg√§nzt.
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProffixRestApiRequestSammlung);
  }
}(this, function(expect, ProffixRestApiRequestSammlung) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LOHMitarbeiterMitarbeiterNr', function() {
    it('should create an instance of LOHMitarbeiterMitarbeiterNr', function() {
      // uncomment below and update the code to test LOHMitarbeiterMitarbeiterNr
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be.a(ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr);
    });

    it('should have the property mitarbeiterNr (base name: "MitarbeiterNr")', function() {
      // uncomment below and update the code to test the property mitarbeiterNr
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property mitarbeiter (base name: "Mitarbeiter")', function() {
      // uncomment below and update the code to test the property mitarbeiter
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property geschlecht (base name: "Geschlecht")', function() {
      // uncomment below and update the code to test the property geschlecht
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property heimatland (base name: "Heimatland")', function() {
      // uncomment below and update the code to test the property heimatland
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property sozialversicherungsnummer (base name: "Sozialversicherungsnummer")', function() {
      // uncomment below and update the code to test the property sozialversicherungsnummer
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property sozialversicherungsnummerFL (base name: "SozialversicherungsnummerFL")', function() {
      // uncomment below and update the code to test the property sozialversicherungsnummerFL
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property auftrag (base name: "Auftrag")', function() {
      // uncomment below and update the code to test the property auftrag
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property kostenstelle (base name: "Kostenstelle")', function() {
      // uncomment below and update the code to test the property kostenstelle
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property kostenart (base name: "Kostenart")', function() {
      // uncomment below and update the code to test the property kostenart
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property habenkonto (base name: "Habenkonto")', function() {
      // uncomment below and update the code to test the property habenkonto
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property sollkonto (base name: "Sollkonto")', function() {
      // uncomment below and update the code to test the property sollkonto
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property bemerkungen (base name: "Bemerkungen")', function() {
      // uncomment below and update the code to test the property bemerkungen
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property bemerkungenLohnausweis (base name: "BemerkungenLohnausweis")', function() {
      // uncomment below and update the code to test the property bemerkungenLohnausweis
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property zivilstand (base name: "Zivilstand")', function() {
      // uncomment below and update the code to test the property zivilstand
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property zahlungsart (base name: "Zahlungsart")', function() {
      // uncomment below and update the code to test the property zahlungsart
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property heimatort (base name: "Heimatort")', function() {
      // uncomment below and update the code to test the property heimatort
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property beruf (base name: "Beruf")', function() {
      // uncomment below and update the code to test the property beruf
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property geloescht (base name: "Geloescht")', function() {
      // uncomment below and update the code to test the property geloescht
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property abteilung (base name: "Abteilung")', function() {
      // uncomment below and update the code to test the property abteilung
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property aufenthaltskategorie (base name: "Aufenthaltskategorie")', function() {
      // uncomment below and update the code to test the property aufenthaltskategorie
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property arbeitsort (base name: "Arbeitsort")', function() {
      // uncomment below and update the code to test the property arbeitsort
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property stundenlohn (base name: "Stundenlohn")', function() {
      // uncomment below and update the code to test the property stundenlohn
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property monatslohn (base name: "Monatslohn")', function() {
      // uncomment below and update the code to test the property monatslohn
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property beschaeftigungsgrad (base name: "Beschaeftigungsgrad")', function() {
      // uncomment below and update the code to test the property beschaeftigungsgrad
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property saisonnier (base name: "Saisonnier")', function() {
      // uncomment below and update the code to test the property saisonnier
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property zivilstandsdatum (base name: "Zivilstandsdatum")', function() {
      // uncomment below and update the code to test the property zivilstandsdatum
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property krankentaggeldversicherungscode1 (base name: "Krankentaggeldversicherungscode1")', function() {
      // uncomment below and update the code to test the property krankentaggeldversicherungscode1
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property krankentaggeldversicherungscode2 (base name: "Krankentaggeldversicherungscode2")', function() {
      // uncomment below and update the code to test the property krankentaggeldversicherungscode2
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property unfallversicherungscode (base name: "Unfallversicherungscode")', function() {
      // uncomment below and update the code to test the property unfallversicherungscode
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property unfallzusatzversicherungscode1 (base name: "Unfallzusatzversicherungscode1")', function() {
      // uncomment below and update the code to test the property unfallzusatzversicherungscode1
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property unfallzusatzversicherungscode2 (base name: "Unfallzusatzversicherungscode2")', function() {
      // uncomment below and update the code to test the property unfallzusatzversicherungscode2
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property erstelltAm (base name: "ErstelltAm")', function() {
      // uncomment below and update the code to test the property erstelltAm
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property erstelltVon (base name: "ErstelltVon")', function() {
      // uncomment below and update the code to test the property erstelltVon
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property geaendertAm (base name: "GeaendertAm")', function() {
      // uncomment below and update the code to test the property geaendertAm
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

    it('should have the property geaendertVon (base name: "GeaendertVon")', function() {
      // uncomment below and update the code to test the property geaendertVon
      //var instance = new ProffixRestApiRequestSammlung.LOHMitarbeiterMitarbeiterNr();
      //expect(instance).to.be();
    });

  });

}));
