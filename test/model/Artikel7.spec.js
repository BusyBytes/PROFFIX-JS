/**
 * PROFFIX REST API Request Sammlung
 * Dies ist eine Request-Sammlung der PROFFIX REST API, welche das PROFFIX REST API Entwicklerhandbuch unter [https://www.proffix.net/entwickler/restapi/handbuch](https://www.proffix.net/entwickler/restapi/handbuch) erg√§nzt.
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProffixRestApiRequestSammlung);
  }
}(this, function(expect, ProffixRestApiRequestSammlung) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProffixRestApiRequestSammlung.Artikel7();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Artikel7', function() {
    it('should create an instance of Artikel7', function() {
      // uncomment below and update the code to test Artikel7
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be.a(ProffixRestApiRequestSammlung.Artikel7);
    });

    it('should have the property artikelNr (base name: "ArtikelNr")', function() {
      // uncomment below and update the code to test the property artikelNr
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property bezeichnung1 (base name: "Bezeichnung1")', function() {
      // uncomment below and update the code to test the property bezeichnung1
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property bezeichnung2 (base name: "Bezeichnung2")', function() {
      // uncomment below and update the code to test the property bezeichnung2
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property bezeichnung3 (base name: "Bezeichnung3")', function() {
      // uncomment below and update the code to test the property bezeichnung3
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property bezeichnung4 (base name: "Bezeichnung4")', function() {
      // uncomment below and update the code to test the property bezeichnung4
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property bezeichnung5 (base name: "Bezeichnung5")', function() {
      // uncomment below and update the code to test the property bezeichnung5
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property geloescht (base name: "Geloescht")', function() {
      // uncomment below and update the code to test the property geloescht
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property waehrung (base name: "Waehrung")', function() {
      // uncomment below and update the code to test the property waehrung
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property einheitLager (base name: "EinheitLager")', function() {
      // uncomment below and update the code to test the property einheitLager
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property einheitRechnung (base name: "EinheitRechnung")', function() {
      // uncomment below and update the code to test the property einheitRechnung
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property dim1 (base name: "Dim1")', function() {
      // uncomment below and update the code to test the property dim1
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property dim2 (base name: "Dim2")', function() {
      // uncomment below and update the code to test the property dim2
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property dim3 (base name: "Dim3")', function() {
      // uncomment below and update the code to test the property dim3
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property verkaufspreis1 (base name: "Verkaufspreis1")', function() {
      // uncomment below and update the code to test the property verkaufspreis1
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property verkaufspreis2 (base name: "Verkaufspreis2")', function() {
      // uncomment below and update the code to test the property verkaufspreis2
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property verkaufspreis3 (base name: "Verkaufspreis3")', function() {
      // uncomment below and update the code to test the property verkaufspreis3
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property verkaufspreis4 (base name: "Verkaufspreis4")', function() {
      // uncomment below and update the code to test the property verkaufspreis4
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property verkaufspreis5 (base name: "Verkaufspreis5")', function() {
      // uncomment below and update the code to test the property verkaufspreis5
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property steuercode (base name: "Steuercode")', function() {
      // uncomment below and update the code to test the property steuercode
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property steuercode1 (base name: "Steuercode1")', function() {
      // uncomment below and update the code to test the property steuercode1
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property steuercode2 (base name: "Steuercode2")', function() {
      // uncomment below and update the code to test the property steuercode2
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property steuercode3 (base name: "Steuercode3")', function() {
      // uncomment below and update the code to test the property steuercode3
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property steuercode4 (base name: "Steuercode4")', function() {
      // uncomment below and update the code to test the property steuercode4
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property steuercode5 (base name: "Steuercode5")', function() {
      // uncomment below and update the code to test the property steuercode5
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property ertragskonto (base name: "Ertragskonto")', function() {
      // uncomment below and update the code to test the property ertragskonto
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property kostenstelle (base name: "Kostenstelle")', function() {
      // uncomment below and update the code to test the property kostenstelle
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property kostenart (base name: "Kostenart")', function() {
      // uncomment below and update the code to test the property kostenart
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property keinRabatt (base name: "KeinRabatt")', function() {
      // uncomment below and update the code to test the property keinRabatt
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property barcode (base name: "Barcode")', function() {
      // uncomment below and update the code to test the property barcode
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property lagerort (base name: "Lagerort")', function() {
      // uncomment below and update the code to test the property lagerort
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property lagerplatz (base name: "Lagerplatz")', function() {
      // uncomment below and update the code to test the property lagerplatz
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property chargeVerwenden (base name: "ChargeVerwenden")', function() {
      // uncomment below and update the code to test the property chargeVerwenden
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property serieNrVerwenden (base name: "SerieNrVerwenden")', function() {
      // uncomment below and update the code to test the property serieNrVerwenden
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property auftrag (base name: "Auftrag")', function() {
      // uncomment below and update the code to test the property auftrag
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property aufwandskonto (base name: "Aufwandskonto")', function() {
      // uncomment below and update the code to test the property aufwandskonto
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property basisInstallieren (base name: "BasisInstallieren")', function() {
      // uncomment below and update the code to test the property basisInstallieren
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property basisNurEinmalInstallieren (base name: "BasisNurEinmalInstallieren")', function() {
      // uncomment below and update the code to test the property basisNurEinmalInstallieren
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property bestandeskonto (base name: "Bestandeskonto")', function() {
      // uncomment below and update the code to test the property bestandeskonto
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property bestellpunkt (base name: "Bestellpunkt")', function() {
      // uncomment below and update the code to test the property bestellpunkt
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property bestellrhythmus (base name: "Bestellrhythmus")', function() {
      // uncomment below and update the code to test the property bestellrhythmus
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property bestellvorschlag (base name: "Bestellvorschlag")', function() {
      // uncomment below and update the code to test the property bestellvorschlag
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property basispreisProzentsatzBewertung (base name: "BasispreisProzentsatzBewertung")', function() {
      // uncomment below and update the code to test the property basispreisProzentsatzBewertung
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property bewertungspreis (base name: "Bewertungspreis")', function() {
      // uncomment below and update the code to test the property bewertungspreis
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property prozentsatzBewertung (base name: "ProzentsatzBewertung")', function() {
      // uncomment below and update the code to test the property prozentsatzBewertung
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property GTIN (base name: "GTIN")', function() {
      // uncomment below and update the code to test the property GTIN
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property gueltigVonEinkauf (base name: "GueltigVonEinkauf")', function() {
      // uncomment below and update the code to test the property gueltigVonEinkauf
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property gueltigBisEinkauf (base name: "GueltigBisEinkauf")', function() {
      // uncomment below and update the code to test the property gueltigBisEinkauf
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property einkaufspreis (base name: "Einkaufspreis")', function() {
      // uncomment below and update the code to test the property einkaufspreis
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property steuercodeEinkauf (base name: "SteuercodeEinkauf")', function() {
      // uncomment below and update the code to test the property steuercodeEinkauf
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property einstandspreis (base name: "Einstandspreis")', function() {
      // uncomment below and update the code to test the property einstandspreis
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property ersatzartikel (base name: "Ersatzartikel")', function() {
      // uncomment below and update the code to test the property ersatzartikel
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property faktor1 (base name: "Faktor1")', function() {
      // uncomment below and update the code to test the property faktor1
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property faktor2 (base name: "Faktor2")', function() {
      // uncomment below and update the code to test the property faktor2
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property faktor3 (base name: "Faktor3")', function() {
      // uncomment below and update the code to test the property faktor3
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property faktor4 (base name: "Faktor4")', function() {
      // uncomment below and update the code to test the property faktor4
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property faktor5 (base name: "Faktor5")', function() {
      // uncomment below and update the code to test the property faktor5
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property faktorBewertung (base name: "FaktorBewertung")', function() {
      // uncomment below and update the code to test the property faktorBewertung
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property faktor1Fixiert (base name: "Faktor1Fixiert")', function() {
      // uncomment below and update the code to test the property faktor1Fixiert
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property faktor2Fixiert (base name: "Faktor2Fixiert")', function() {
      // uncomment below and update the code to test the property faktor2Fixiert
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property faktor3Fixiert (base name: "Faktor3Fixiert")', function() {
      // uncomment below and update the code to test the property faktor3Fixiert
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property faktor4Fixiert (base name: "Faktor4Fixiert")', function() {
      // uncomment below and update the code to test the property faktor4Fixiert
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property faktor5Fixiert (base name: "Faktor5Fixiert")', function() {
      // uncomment below and update the code to test the property faktor5Fixiert
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property faktorBewertungFixiert (base name: "FaktorBewertungFixiert")', function() {
      // uncomment below and update the code to test the property faktorBewertungFixiert
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property garantie (base name: "Garantie")', function() {
      // uncomment below and update the code to test the property garantie
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property gebindeeinheit (base name: "Gebindeeinheit")', function() {
      // uncomment below and update the code to test the property gebindeeinheit
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property gewicht (base name: "Gewicht")', function() {
      // uncomment below and update the code to test the property gewicht
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property artikelgruppe (base name: "Artikelgruppe")', function() {
      // uncomment below and update the code to test the property artikelgruppe
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property hersteller (base name: "Hersteller")', function() {
      // uncomment below and update the code to test the property hersteller
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property keinBestand (base name: "KeinBestand")', function() {
      // uncomment below and update the code to test the property keinBestand
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property keinKassenverkauf (base name: "KeinKassenverkauf")', function() {
      // uncomment below and update the code to test the property keinKassenverkauf
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property artikelklasse (base name: "Artikelklasse")', function() {
      // uncomment below and update the code to test the property artikelklasse
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property lagerartikel (base name: "Lagerartikel")', function() {
      // uncomment below and update the code to test the property lagerartikel
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property letzterEinkaufspreis (base name: "LetzterEinkaufspreis")', function() {
      // uncomment below and update the code to test the property letzterEinkaufspreis
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property minimalbestand (base name: "Minimalbestand")', function() {
      // uncomment below and update the code to test the property minimalbestand
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property maximalbestand (base name: "Maximalbestand")', function() {
      // uncomment below and update the code to test the property maximalbestand
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property mindestbestellmenge (base name: "Mindestbestellmenge")', function() {
      // uncomment below and update the code to test the property mindestbestellmenge
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property negativbestand (base name: "Negativbestand")', function() {
      // uncomment below and update the code to test the property negativbestand
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property optimalbestellmenge (base name: "Optimalbestellmenge")', function() {
      // uncomment below and update the code to test the property optimalbestellmenge
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property packungseinheit (base name: "Packungseinheit")', function() {
      // uncomment below and update the code to test the property packungseinheit
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property mitPackungseinheitRechnen (base name: "MitPackungseinheitRechnen")', function() {
      // uncomment below and update the code to test the property mitPackungseinheitRechnen
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property preisAufAnfrageWebshop (base name: "PreisAufAnfrageWebshop")', function() {
      // uncomment below and update the code to test the property preisAufAnfrageWebshop
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property sammelartikel (base name: "Sammelartikel")', function() {
      // uncomment below and update the code to test the property sammelartikel
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property webshop (base name: "Webshop")', function() {
      // uncomment below and update the code to test the property webshop
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property aktionWebshop (base name: "AktionWebshop")', function() {
      // uncomment below and update the code to test the property aktionWebshop
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property webshopbildErstellt (base name: "WebshopbildErstellt")', function() {
      // uncomment below and update the code to test the property webshopbildErstellt
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property sicherheitstage (base name: "Sicherheitstage")', function() {
      // uncomment below and update the code to test the property sicherheitstage
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property stuecklisteAufloesen (base name: "StuecklisteAufloesen")', function() {
      // uncomment below and update the code to test the property stuecklisteAufloesen
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property stuecklisteBuendeln (base name: "StuecklisteBuendeln")', function() {
      // uncomment below and update the code to test the property stuecklisteBuendeln
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property istStuecklistenkopf (base name: "IstStuecklistenkopf")', function() {
      // uncomment below and update the code to test the property istStuecklistenkopf
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property stuecklistenpreiseBerechnen (base name: "StuecklistenpreiseBerechnen")', function() {
      // uncomment below and update the code to test the property stuecklistenpreiseBerechnen
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property tara (base name: "Tara")', function() {
      // uncomment below and update the code to test the property tara
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property artikeluntergruppe (base name: "Artikeluntergruppe")', function() {
      // uncomment below and update the code to test the property artikeluntergruppe
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property gueltigVonVerkauf (base name: "GueltigVonVerkauf")', function() {
      // uncomment below and update the code to test the property gueltigVonVerkauf
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property gueltigBisVerkauf (base name: "GueltigBisVerkauf")', function() {
      // uncomment below and update the code to test the property gueltigBisVerkauf
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property verpackung (base name: "Verpackung")', function() {
      // uncomment below and update the code to test the property verpackung
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property basispreis1 (base name: "Basispreis1")', function() {
      // uncomment below and update the code to test the property basispreis1
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property basispreis2 (base name: "Basispreis2")', function() {
      // uncomment below and update the code to test the property basispreis2
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property basispreis3 (base name: "Basispreis3")', function() {
      // uncomment below and update the code to test the property basispreis3
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property basispreis4 (base name: "Basispreis4")', function() {
      // uncomment below and update the code to test the property basispreis4
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property basispreis5 (base name: "Basispreis5")', function() {
      // uncomment below and update the code to test the property basispreis5
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property basispreisBewertung (base name: "BasispreisBewertung")', function() {
      // uncomment below and update the code to test the property basispreisBewertung
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property wiederbeschaffung (base name: "Wiederbeschaffung")', function() {
      // uncomment below and update the code to test the property wiederbeschaffung
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property suchfeld (base name: "Suchfeld")', function() {
      // uncomment below and update the code to test the property suchfeld
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property ursprungsland (base name: "Ursprungsland")', function() {
      // uncomment below and update the code to test the property ursprungsland
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property erstelltAm (base name: "ErstelltAm")', function() {
      // uncomment below and update the code to test the property erstelltAm
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property erstelltVon (base name: "ErstelltVon")', function() {
      // uncomment below and update the code to test the property erstelltVon
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property geaendertAm (base name: "GeaendertAm")', function() {
      // uncomment below and update the code to test the property geaendertAm
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property geaendertVon (base name: "GeaendertVon")', function() {
      // uncomment below and update the code to test the property geaendertVon
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

    it('should have the property zusatzfelder (base name: "Zusatzfelder")', function() {
      // uncomment below and update the code to test the property zusatzfelder
      //var instance = new ProffixRestApiRequestSammlung.Artikel7();
      //expect(instance).to.be();
    });

  });

}));
