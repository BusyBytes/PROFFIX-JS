/**
 * PROFFIX REST API Request Sammlung
 * Dies ist eine Request-Sammlung der PROFFIX REST API, welche das PROFFIX REST API Entwicklerhandbuch unter [https://www.proffix.net/entwickler/restapi/handbuch](https://www.proffix.net/entwickler/restapi/handbuch) erg√§nzt.
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProffixRestApiRequestSammlung);
  }
}(this, function(expect, ProffixRestApiRequestSammlung) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LOHKindKindNr', function() {
    it('should create an instance of LOHKindKindNr', function() {
      // uncomment below and update the code to test LOHKindKindNr
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be.a(ProffixRestApiRequestSammlung.LOHKindKindNr);
    });

    it('should have the property kindNr (base name: "KindNr")', function() {
      // uncomment below and update the code to test the property kindNr
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property ausbildungszulage1Von (base name: "Ausbildungszulage1Von")', function() {
      // uncomment below and update the code to test the property ausbildungszulage1Von
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property ausbildungszulage1Bis (base name: "Ausbildungszulage1Bis")', function() {
      // uncomment below and update the code to test the property ausbildungszulage1Bis
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property ausbildungszulage2Von (base name: "Ausbildungszulage2Von")', function() {
      // uncomment below and update the code to test the property ausbildungszulage2Von
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property ausbildungszulage2Bis (base name: "Ausbildungszulage2Bis")', function() {
      // uncomment below and update the code to test the property ausbildungszulage2Bis
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property bemerkungen (base name: "Bemerkungen")', function() {
      // uncomment below and update the code to test the property bemerkungen
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property familienstatus (base name: "Familienstatus")', function() {
      // uncomment below and update the code to test the property familienstatus
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property geburtsdatum (base name: "Geburtsdatum")', function() {
      // uncomment below and update the code to test the property geburtsdatum
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property geschlecht (base name: "Geschlecht")', function() {
      // uncomment below and update the code to test the property geschlecht
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property mitarbeiter (base name: "Mitarbeiter")', function() {
      // uncomment below and update the code to test the property mitarbeiter
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property sozialversicherungsnummer (base name: "Sozialversicherungsnummer")', function() {
      // uncomment below and update the code to test the property sozialversicherungsnummer
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property vorname (base name: "Vorname")', function() {
      // uncomment below and update the code to test the property vorname
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property kinderzulage1Von (base name: "Kinderzulage1Von")', function() {
      // uncomment below and update the code to test the property kinderzulage1Von
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property kinderzulage1Bis (base name: "Kinderzulage1Bis")', function() {
      // uncomment below and update the code to test the property kinderzulage1Bis
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property kinderzulage2Von (base name: "Kinderzulage2Von")', function() {
      // uncomment below and update the code to test the property kinderzulage2Von
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property kinderzulage2Bis (base name: "Kinderzulage2Bis")', function() {
      // uncomment below and update the code to test the property kinderzulage2Bis
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property erstelltAm (base name: "ErstelltAm")', function() {
      // uncomment below and update the code to test the property erstelltAm
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property erstelltVon (base name: "ErstelltVon")', function() {
      // uncomment below and update the code to test the property erstelltVon
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property geaendertAm (base name: "GeaendertAm")', function() {
      // uncomment below and update the code to test the property geaendertAm
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property geaendertVon (base name: "GeaendertVon")', function() {
      // uncomment below and update the code to test the property geaendertVon
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

    it('should have the property zusatzfelder (base name: "Zusatzfelder")', function() {
      // uncomment below and update the code to test the property zusatzfelder
      //var instance = new ProffixRestApiRequestSammlung.LOHKindKindNr();
      //expect(instance).to.be();
    });

  });

}));
