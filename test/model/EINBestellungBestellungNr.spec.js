/**
 * PROFFIX REST API Request Sammlung
 * Dies ist eine Request-Sammlung der PROFFIX REST API, welche das PROFFIX REST API Entwicklerhandbuch unter [https://www.proffix.net/entwickler/restapi/handbuch](https://www.proffix.net/entwickler/restapi/handbuch) erg√§nzt.
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProffixRestApiRequestSammlung);
  }
}(this, function(expect, ProffixRestApiRequestSammlung) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EINBestellungBestellungNr', function() {
    it('should create an instance of EINBestellungBestellungNr', function() {
      // uncomment below and update the code to test EINBestellungBestellungNr
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be.a(ProffixRestApiRequestSammlung.EINBestellungBestellungNr);
    });

    it('should have the property bestellungNr (base name: "BestellungNr")', function() {
      // uncomment below and update the code to test the property bestellungNr
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property adresse (base name: "Adresse")', function() {
      // uncomment below and update the code to test the property adresse
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property adresszeile1 (base name: "Adresszeile1")', function() {
      // uncomment below and update the code to test the property adresszeile1
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property adresszeile2 (base name: "Adresszeile2")', function() {
      // uncomment below and update the code to test the property adresszeile2
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property adresszeile3 (base name: "Adresszeile3")', function() {
      // uncomment below and update the code to test the property adresszeile3
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property adresszeile4 (base name: "Adresszeile4")', function() {
      // uncomment below and update the code to test the property adresszeile4
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property adresszeile5 (base name: "Adresszeile5")', function() {
      // uncomment below and update the code to test the property adresszeile5
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property anrede (base name: "Anrede")', function() {
      // uncomment below and update the code to test the property anrede
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property aufgabe (base name: "Aufgabe")', function() {
      // uncomment below and update the code to test the property aufgabe
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property auftrag (base name: "Auftrag")', function() {
      // uncomment below and update the code to test the property auftrag
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property bestelltyp (base name: "Bestelltyp")', function() {
      // uncomment below and update the code to test the property bestelltyp
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property bestellungEnde (base name: "BestellungEnde")', function() {
      // uncomment below and update the code to test the property bestellungEnde
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property datum (base name: "Datum")', function() {
      // uncomment below and update the code to test the property datum
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property dokumentLieferant (base name: "DokumentLieferant")', function() {
      // uncomment below and update the code to test the property dokumentLieferant
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property gedruckt (base name: "Gedruckt")', function() {
      // uncomment below and update the code to test the property gedruckt
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property ihrZeichen (base name: "IhrZeichen")', function() {
      // uncomment below and update the code to test the property ihrZeichen
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property region (base name: "Region")', function() {
      // uncomment below and update the code to test the property region
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property kontaktname (base name: "Kontaktname")', function() {
      // uncomment below and update the code to test the property kontaktname
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property kontakt (base name: "Kontakt")', function() {
      // uncomment below and update the code to test the property kontakt
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property land (base name: "Land")', function() {
      // uncomment below and update the code to test the property land
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property lieferadresszeile1 (base name: "Lieferadresszeile1")', function() {
      // uncomment below and update the code to test the property lieferadresszeile1
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property lieferadresszeile2 (base name: "Lieferadresszeile2")', function() {
      // uncomment below and update the code to test the property lieferadresszeile2
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property lieferadresszeile3 (base name: "Lieferadresszeile3")', function() {
      // uncomment below and update the code to test the property lieferadresszeile3
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property lieferadresszeile4 (base name: "Lieferadresszeile4")', function() {
      // uncomment below and update the code to test the property lieferadresszeile4
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property lieferadresszeile5 (base name: "Lieferadresszeile5")', function() {
      // uncomment below and update the code to test the property lieferadresszeile5
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property lieferadresse (base name: "Lieferadresse")', function() {
      // uncomment below and update the code to test the property lieferadresse
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressAnrede (base name: "LieferadressAnrede")', function() {
      // uncomment below and update the code to test the property lieferadressAnrede
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property lieferart (base name: "Lieferart")', function() {
      // uncomment below and update the code to test the property lieferart
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressRegion (base name: "LieferadressRegion")', function() {
      // uncomment below and update the code to test the property lieferadressRegion
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressKontaktname (base name: "LieferadressKontaktname")', function() {
      // uncomment below and update the code to test the property lieferadressKontaktname
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressKontakt (base name: "LieferadressKontakt")', function() {
      // uncomment below and update the code to test the property lieferadressKontakt
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressLand (base name: "LieferadressLand")', function() {
      // uncomment below and update the code to test the property lieferadressLand
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressName (base name: "LieferadressName")', function() {
      // uncomment below and update the code to test the property lieferadressName
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressOrt (base name: "LieferadressOrt")', function() {
      // uncomment below and update the code to test the property lieferadressOrt
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressPLZ (base name: "LieferadressPLZ")', function() {
      // uncomment below and update the code to test the property lieferadressPLZ
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressStrasse (base name: "LieferadressStrasse")', function() {
      // uncomment below and update the code to test the property lieferadressStrasse
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressVorname (base name: "LieferadressVorname")', function() {
      // uncomment below and update the code to test the property lieferadressVorname
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property ort (base name: "Ort")', function() {
      // uncomment below and update the code to test the property ort
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property PLZ (base name: "PLZ")', function() {
      // uncomment below and update the code to test the property PLZ
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadresszeile1 (base name: "Rechnungsadresszeile1")', function() {
      // uncomment below and update the code to test the property rechnungsadresszeile1
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadresszeile2 (base name: "Rechnungsadresszeile2")', function() {
      // uncomment below and update the code to test the property rechnungsadresszeile2
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadresszeile3 (base name: "Rechnungsadresszeile3")', function() {
      // uncomment below and update the code to test the property rechnungsadresszeile3
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadresszeile4 (base name: "Rechnungsadresszeile4")', function() {
      // uncomment below and update the code to test the property rechnungsadresszeile4
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadresszeile5 (base name: "Rechnungsadresszeile5")', function() {
      // uncomment below and update the code to test the property rechnungsadresszeile5
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadresse (base name: "Rechnungsadresse")', function() {
      // uncomment below and update the code to test the property rechnungsadresse
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressAnrede (base name: "RechnungsadressAnrede")', function() {
      // uncomment below and update the code to test the property rechnungsadressAnrede
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressRegion (base name: "RechnungsadressRegion")', function() {
      // uncomment below and update the code to test the property rechnungsadressRegion
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressKontaktname (base name: "RechnungsadressKontaktname")', function() {
      // uncomment below and update the code to test the property rechnungsadressKontaktname
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressKontakt (base name: "RechnungsadressKontakt")', function() {
      // uncomment below and update the code to test the property rechnungsadressKontakt
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressLand (base name: "RechnungsadressLand")', function() {
      // uncomment below and update the code to test the property rechnungsadressLand
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressName (base name: "RechnungsadressName")', function() {
      // uncomment below and update the code to test the property rechnungsadressName
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressOrt (base name: "RechnungsadressOrt")', function() {
      // uncomment below and update the code to test the property rechnungsadressOrt
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressPLZ (base name: "RechnungsadressPLZ")', function() {
      // uncomment below and update the code to test the property rechnungsadressPLZ
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressStrasse (base name: "RechnungsadressStrasse")', function() {
      // uncomment below and update the code to test the property rechnungsadressStrasse
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressVorname (base name: "RechnungsadressVorname")', function() {
      // uncomment below and update the code to test the property rechnungsadressVorname
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property referenztext (base name: "Referenztext")', function() {
      // uncomment below and update the code to test the property referenztext
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property sprache (base name: "Sprache")', function() {
      // uncomment below and update the code to test the property sprache
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property termin (base name: "Termin")', function() {
      // uncomment below and update the code to test the property termin
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property terminWoche (base name: "TerminWoche")', function() {
      // uncomment below and update the code to test the property terminWoche
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property unserZeichen (base name: "UnserZeichen")', function() {
      // uncomment below and update the code to test the property unserZeichen
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property vorname (base name: "Vorname")', function() {
      // uncomment below and update the code to test the property vorname
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property positionen (base name: "Positionen")', function() {
      // uncomment below and update the code to test the property positionen
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property aktuell (base name: "Aktuell")', function() {
      // uncomment below and update the code to test the property aktuell
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property erstelltAm (base name: "ErstelltAm")', function() {
      // uncomment below and update the code to test the property erstelltAm
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property erstelltVon (base name: "ErstelltVon")', function() {
      // uncomment below and update the code to test the property erstelltVon
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property geaendertAm (base name: "GeaendertAm")', function() {
      // uncomment below and update the code to test the property geaendertAm
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property geaendertVon (base name: "GeaendertVon")', function() {
      // uncomment below and update the code to test the property geaendertVon
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

    it('should have the property zusatzfelder (base name: "Zusatzfelder")', function() {
      // uncomment below and update the code to test the property zusatzfelder
      //var instance = new ProffixRestApiRequestSammlung.EINBestellungBestellungNr();
      //expect(instance).to.be();
    });

  });

}));
