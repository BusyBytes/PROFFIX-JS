/**
 * PROFFIX REST API Request Sammlung
 * Dies ist eine Request-Sammlung der PROFFIX REST API, welche das PROFFIX REST API Entwicklerhandbuch unter [https://www.proffix.net/entwickler/restapi/handbuch](https://www.proffix.net/entwickler/restapi/handbuch) erg√§nzt.
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProffixRestApiRequestSammlung);
  }
}(this, function(expect, ProffixRestApiRequestSammlung) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('STURapportRapportNr', function() {
    it('should create an instance of STURapportRapportNr', function() {
      // uncomment below and update the code to test STURapportRapportNr
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be.a(ProffixRestApiRequestSammlung.STURapportRapportNr);
    });

    it('should have the property rapportNr (base name: "RapportNr")', function() {
      // uncomment below and update the code to test the property rapportNr
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property mitarbeiter (base name: "Mitarbeiter")', function() {
      // uncomment below and update the code to test the property mitarbeiter
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property auftrag (base name: "Auftrag")', function() {
      // uncomment below and update the code to test the property auftrag
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property projekt (base name: "Projekt")', function() {
      // uncomment below and update the code to test the property projekt
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property artikel (base name: "Artikel")', function() {
      // uncomment below and update the code to test the property artikel
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property bezeichnung1 (base name: "Bezeichnung1")', function() {
      // uncomment below and update the code to test the property bezeichnung1
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property bezeichnung2 (base name: "Bezeichnung2")', function() {
      // uncomment below and update the code to test the property bezeichnung2
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property bezeichnung3 (base name: "Bezeichnung3")', function() {
      // uncomment below and update the code to test the property bezeichnung3
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property bezeichnung4 (base name: "Bezeichnung4")', function() {
      // uncomment below and update the code to test the property bezeichnung4
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property bezeichnung5 (base name: "Bezeichnung5")', function() {
      // uncomment below and update the code to test the property bezeichnung5
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property einheitLager (base name: "EinheitLager")', function() {
      // uncomment below and update the code to test the property einheitLager
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property einheitRechnung (base name: "EinheitRechnung")', function() {
      // uncomment below and update the code to test the property einheitRechnung
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property menge (base name: "Menge")', function() {
      // uncomment below and update the code to test the property menge
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property mengeVerr (base name: "MengeVerr")', function() {
      // uncomment below and update the code to test the property mengeVerr
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property dim1 (base name: "Dim1")', function() {
      // uncomment below and update the code to test the property dim1
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property dim2 (base name: "Dim2")', function() {
      // uncomment below and update the code to test the property dim2
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property dim3 (base name: "Dim3")', function() {
      // uncomment below and update the code to test the property dim3
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property lagerpreis (base name: "Lagerpreis")', function() {
      // uncomment below and update the code to test the property lagerpreis
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property datum (base name: "Datum")', function() {
      // uncomment below and update the code to test the property datum
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property positionsart (base name: "Positionsart")', function() {
      // uncomment below and update the code to test the property positionsart
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property kaWo (base name: "KaWo")', function() {
      // uncomment below and update the code to test the property kaWo
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property startZeit (base name: "StartZeit")', function() {
      // uncomment below and update the code to test the property startZeit
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property endZeit (base name: "EndZeit")', function() {
      // uncomment below and update the code to test the property endZeit
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property stunden (base name: "Stunden")', function() {
      // uncomment below and update the code to test the property stunden
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property stundenVerr (base name: "StundenVerr")', function() {
      // uncomment below and update the code to test the property stundenVerr
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property pause (base name: "Pause")', function() {
      // uncomment below and update the code to test the property pause
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property bemerkungen (base name: "Bemerkungen")', function() {
      // uncomment below and update the code to test the property bemerkungen
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property bemerkungenRTF (base name: "BemerkungenRTF")', function() {
      // uncomment below and update the code to test the property bemerkungenRTF
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property selbstkosten (base name: "Selbstkosten")', function() {
      // uncomment below and update the code to test the property selbstkosten
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property ueberzeit (base name: "Ueberzeit")', function() {
      // uncomment below and update the code to test the property ueberzeit
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property stdPreis (base name: "StdPreis")', function() {
      // uncomment below and update the code to test the property stdPreis
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property km (base name: "Km")', function() {
      // uncomment below and update the code to test the property km
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property spesen (base name: "Spesen")', function() {
      // uncomment below and update the code to test the property spesen
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property periodeLohn (base name: "PeriodeLohn")', function() {
      // uncomment below and update the code to test the property periodeLohn
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property preisFW (base name: "PreisFW")', function() {
      // uncomment below and update the code to test the property preisFW
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property totalFW (base name: "TotalFW")', function() {
      // uncomment below and update the code to test the property totalFW
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property steuerFW (base name: "SteuerFW")', function() {
      // uncomment below and update the code to test the property steuerFW
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property rabatt (base name: "Rabatt")', function() {
      // uncomment below and update the code to test the property rabatt
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property rabattFW (base name: "RabattFW")', function() {
      // uncomment below and update the code to test the property rabattFW
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property waehrung (base name: "Waehrung")', function() {
      // uncomment below and update the code to test the property waehrung
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property kurs (base name: "Kurs")', function() {
      // uncomment below and update the code to test the property kurs
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property ertragskonto (base name: "Ertragskonto")', function() {
      // uncomment below and update the code to test the property ertragskonto
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property vertreter (base name: "Vertreter")', function() {
      // uncomment below and update the code to test the property vertreter
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property kostenart (base name: "Kostenart")', function() {
      // uncomment below and update the code to test the property kostenart
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property kostenstelle (base name: "Kostenstelle")', function() {
      // uncomment below and update the code to test the property kostenstelle
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property empfaengerAdr (base name: "EmpfaengerAdr")', function() {
      // uncomment below and update the code to test the property empfaengerAdr
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property lagerbewegungen (base name: "Lagerbewegungen")', function() {
      // uncomment below and update the code to test the property lagerbewegungen
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property verrechnen (base name: "Verrechnen")', function() {
      // uncomment below and update the code to test the property verrechnen
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property steuercode (base name: "Steuercode")', function() {
      // uncomment below and update the code to test the property steuercode
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property verrechnet (base name: "Verrechnet")', function() {
      // uncomment below and update the code to test the property verrechnet
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property gesperrt (base name: "Gesperrt")', function() {
      // uncomment below and update the code to test the property gesperrt
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property serviceauftrag (base name: "Serviceauftrag")', function() {
      // uncomment below and update the code to test the property serviceauftrag
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property serviceauftragspositionNr (base name: "ServiceauftragspositionNr")', function() {
      // uncomment below and update the code to test the property serviceauftragspositionNr
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property teilleistung (base name: "Teilleistung")', function() {
      // uncomment below and update the code to test the property teilleistung
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property erstelltAm (base name: "ErstelltAm")', function() {
      // uncomment below and update the code to test the property erstelltAm
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property erstelltVon (base name: "ErstelltVon")', function() {
      // uncomment below and update the code to test the property erstelltVon
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property geaendertAm (base name: "GeaendertAm")', function() {
      // uncomment below and update the code to test the property geaendertAm
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property geaendertVon (base name: "GeaendertVon")', function() {
      // uncomment below and update the code to test the property geaendertVon
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

    it('should have the property zusatzfelder (base name: "Zusatzfelder")', function() {
      // uncomment below and update the code to test the property zusatzfelder
      //var instance = new ProffixRestApiRequestSammlung.STURapportRapportNr();
      //expect(instance).to.be();
    });

  });

}));
