/**
 * PROFFIX REST API Request Sammlung
 * Dies ist eine Request-Sammlung der PROFFIX REST API, welche das PROFFIX REST API Entwicklerhandbuch unter [https://www.proffix.net/entwickler/restapi/handbuch](https://www.proffix.net/entwickler/restapi/handbuch) erg√§nzt.
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProffixRestApiRequestSammlung);
  }
}(this, function(expect, ProffixRestApiRequestSammlung) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProffixRestApiRequestSammlung.Positionen6();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Positionen6', function() {
    it('should create an instance of Positionen6', function() {
      // uncomment below and update the code to test Positionen6
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be.a(ProffixRestApiRequestSammlung.Positionen6);
    });

    it('should have the property bestellpositionNr (base name: "BestellpositionNr")', function() {
      // uncomment below and update the code to test the property bestellpositionNr
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property positionNr (base name: "PositionNr")', function() {
      // uncomment below and update the code to test the property positionNr
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property artikel (base name: "Artikel")', function() {
      // uncomment below and update the code to test the property artikel
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property artikelLieferant (base name: "ArtikelLieferant")', function() {
      // uncomment below and update the code to test the property artikelLieferant
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property auftrag (base name: "Auftrag")', function() {
      // uncomment below and update the code to test the property auftrag
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property menge (base name: "Menge")', function() {
      // uncomment below and update the code to test the property menge
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property bestelltyp (base name: "Bestelltyp")', function() {
      // uncomment below and update the code to test the property bestelltyp
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property bezeichnung1 (base name: "Bezeichnung1")', function() {
      // uncomment below and update the code to test the property bezeichnung1
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property bezeichnung2 (base name: "Bezeichnung2")', function() {
      // uncomment below and update the code to test the property bezeichnung2
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property bezeichnung3 (base name: "Bezeichnung3")', function() {
      // uncomment below and update the code to test the property bezeichnung3
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property bezeichnung4 (base name: "Bezeichnung4")', function() {
      // uncomment below and update the code to test the property bezeichnung4
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property bezeichnung5 (base name: "Bezeichnung5")', function() {
      // uncomment below and update the code to test the property bezeichnung5
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property dim2 (base name: "Dim2")', function() {
      // uncomment below and update the code to test the property dim2
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property dokument (base name: "Dokument")', function() {
      // uncomment below and update the code to test the property dokument
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property einheitLager (base name: "EinheitLager")', function() {
      // uncomment below and update the code to test the property einheitLager
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property einheitRechnung (base name: "EinheitRechnung")', function() {
      // uncomment below and update the code to test the property einheitRechnung
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property etikettenDruckmenge (base name: "EtikettenDruckmenge")', function() {
      // uncomment below and update the code to test the property etikettenDruckmenge
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property mengeGeliefert (base name: "MengeGeliefert")', function() {
      // uncomment below and update the code to test the property mengeGeliefert
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property gewicht (base name: "Gewicht")', function() {
      // uncomment below and update the code to test the property gewicht
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property gtinStufe (base name: "GtinStufe")', function() {
      // uncomment below and update the code to test the property gtinStufe
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property kurs (base name: "Kurs")', function() {
      // uncomment below and update the code to test the property kurs
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property dim1 (base name: "Dim1")', function() {
      // uncomment below and update the code to test the property dim1
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property mengeVerr (base name: "MengeVerr")', function() {
      // uncomment below and update the code to test the property mengeVerr
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property notizenExtern (base name: "NotizenExtern")', function() {
      // uncomment below and update the code to test the property notizenExtern
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property notizenExternRTF (base name: "NotizenExternRTF")', function() {
      // uncomment below and update the code to test the property notizenExternRTF
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property notizenIntern (base name: "NotizenIntern")', function() {
      // uncomment below and update the code to test the property notizenIntern
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property notizenInternRTF (base name: "NotizenInternRTF")', function() {
      // uncomment below and update the code to test the property notizenInternRTF
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property positionEnde (base name: "PositionEnde")', function() {
      // uncomment below and update the code to test the property positionEnde
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property positionstyp (base name: "Positionstyp")', function() {
      // uncomment below and update the code to test the property positionstyp
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property preisdefinition (base name: "Preisdefinition")', function() {
      // uncomment below and update the code to test the property preisdefinition
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property preisFW (base name: "PreisFW")', function() {
      // uncomment below and update the code to test the property preisFW
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property preisSW (base name: "PreisSW")', function() {
      // uncomment below and update the code to test the property preisSW
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property rabatt1 (base name: "Rabatt1")', function() {
      // uncomment below and update the code to test the property rabatt1
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property rabatt2 (base name: "Rabatt2")', function() {
      // uncomment below and update the code to test the property rabatt2
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property restErledigt (base name: "RestErledigt")', function() {
      // uncomment below and update the code to test the property restErledigt
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property rueckstandsNr (base name: "RueckstandsNr")', function() {
      // uncomment below and update the code to test the property rueckstandsNr
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property vertragsanzahl (base name: "Vertragsanzahl")', function() {
      // uncomment below and update the code to test the property vertragsanzahl
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property rahmenvertrag (base name: "Rahmenvertrag")', function() {
      // uncomment below and update the code to test the property rahmenvertrag
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property rahmenvertragPositionNr (base name: "RahmenvertragPositionNr")', function() {
      // uncomment below and update the code to test the property rahmenvertragPositionNr
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property sprache (base name: "Sprache")', function() {
      // uncomment below and update the code to test the property sprache
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property stuecklistenkopf (base name: "Stuecklistenkopf")', function() {
      // uncomment below and update the code to test the property stuecklistenkopf
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property tara (base name: "Tara")', function() {
      // uncomment below and update the code to test the property tara
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property termin (base name: "Termin")', function() {
      // uncomment below and update the code to test the property termin
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property terminBestaetigt (base name: "TerminBestaetigt")', function() {
      // uncomment below and update the code to test the property terminBestaetigt
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property terminWoche (base name: "TerminWoche")', function() {
      // uncomment below and update the code to test the property terminWoche
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property dim3 (base name: "Dim3")', function() {
      // uncomment below and update the code to test the property dim3
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property totalFW (base name: "TotalFW")', function() {
      // uncomment below and update the code to test the property totalFW
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property totalSW (base name: "TotalSW")', function() {
      // uncomment below and update the code to test the property totalSW
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property verhaeltnis (base name: "Verhaeltnis")', function() {
      // uncomment below and update the code to test the property verhaeltnis
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property verpackungen (base name: "Verpackungen")', function() {
      // uncomment below and update the code to test the property verpackungen
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property waehrung (base name: "Waehrung")', function() {
      // uncomment below and update the code to test the property waehrung
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property wareneingangslisteLieferung (base name: "WareneingangslisteLieferung")', function() {
      // uncomment below and update the code to test the property wareneingangslisteLieferung
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property wareneingangsliste (base name: "Wareneingangsliste")', function() {
      // uncomment below and update the code to test the property wareneingangsliste
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property wareneingangslisteRestErledigt (base name: "WareneingangslisteRestErledigt")', function() {
      // uncomment below and update the code to test the property wareneingangslisteRestErledigt
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property terminWocheBestaetigt (base name: "TerminWocheBestaetigt")', function() {
      // uncomment below and update the code to test the property terminWocheBestaetigt
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property lagerbewegungen (base name: "Lagerbewegungen")', function() {
      // uncomment below and update the code to test the property lagerbewegungen
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property erstelltAm (base name: "ErstelltAm")', function() {
      // uncomment below and update the code to test the property erstelltAm
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property erstelltVon (base name: "ErstelltVon")', function() {
      // uncomment below and update the code to test the property erstelltVon
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property geaendertAm (base name: "GeaendertAm")', function() {
      // uncomment below and update the code to test the property geaendertAm
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property geaendertVon (base name: "GeaendertVon")', function() {
      // uncomment below and update the code to test the property geaendertVon
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

    it('should have the property zusatzfelder (base name: "Zusatzfelder")', function() {
      // uncomment below and update the code to test the property zusatzfelder
      //var instance = new ProffixRestApiRequestSammlung.Positionen6();
      //expect(instance).to.be();
    });

  });

}));
