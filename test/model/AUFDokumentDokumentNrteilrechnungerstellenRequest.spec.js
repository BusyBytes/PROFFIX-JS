/**
 * PROFFIX REST API Request Sammlung
 * Dies ist eine Request-Sammlung der PROFFIX REST API, welche das PROFFIX REST API Entwicklerhandbuch unter [https://www.proffix.net/entwickler/restapi/handbuch](https://www.proffix.net/entwickler/restapi/handbuch) erg√§nzt.
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProffixRestApiRequestSammlung);
  }
}(this, function(expect, ProffixRestApiRequestSammlung) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AUFDokumentDokumentNrteilrechnungerstellenRequest', function() {
    it('should create an instance of AUFDokumentDokumentNrteilrechnungerstellenRequest', function() {
      // uncomment below and update the code to test AUFDokumentDokumentNrteilrechnungerstellenRequest
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be.a(ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest);
    });

    it('should have the property adresse (base name: "Adresse")', function() {
      // uncomment below and update the code to test the property adresse
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property adresszeile1 (base name: "Adresszeile1")', function() {
      // uncomment below and update the code to test the property adresszeile1
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property adresszeile2 (base name: "Adresszeile2")', function() {
      // uncomment below and update the code to test the property adresszeile2
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property adresszeile3 (base name: "Adresszeile3")', function() {
      // uncomment below and update the code to test the property adresszeile3
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property adresszeile4 (base name: "Adresszeile4")', function() {
      // uncomment below and update the code to test the property adresszeile4
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property adresszeile5 (base name: "Adresszeile5")', function() {
      // uncomment below and update the code to test the property adresszeile5
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property anrede (base name: "Anrede")', function() {
      // uncomment below and update the code to test the property anrede
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property auftrag (base name: "Auftrag")', function() {
      // uncomment below and update the code to test the property auftrag
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property buchung (base name: "Buchung")', function() {
      // uncomment below and update the code to test the property buchung
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property datum (base name: "Datum")', function() {
      // uncomment below and update the code to test the property datum
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property dokumentstatus (base name: "Dokumentstatus")', function() {
      // uncomment below and update the code to test the property dokumentstatus
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property dokumenttyp (base name: "Dokumenttyp")', function() {
      // uncomment below and update the code to test the property dokumenttyp
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property eSRNummer (base name: "ESRNummer")', function() {
      // uncomment below and update the code to test the property eSRNummer
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property fusstext (base name: "Fusstext")', function() {
      // uncomment below and update the code to test the property fusstext
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property fusstextRTF (base name: "FusstextRTF")', function() {
      // uncomment below and update the code to test the property fusstextRTF
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property gedruckt (base name: "Gedruckt")', function() {
      // uncomment below and update the code to test the property gedruckt
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property gesperrt (base name: "Gesperrt")', function() {
      // uncomment below and update the code to test the property gesperrt
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property gueltigkeit (base name: "Gueltigkeit")', function() {
      // uncomment below and update the code to test the property gueltigkeit
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property ihrZeichen (base name: "IhrZeichen")', function() {
      // uncomment below and update the code to test the property ihrZeichen
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property region (base name: "Region")', function() {
      // uncomment below and update the code to test the property region
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property kondition (base name: "Kondition")', function() {
      // uncomment below and update the code to test the property kondition
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property kontaktname (base name: "Kontaktname")', function() {
      // uncomment below and update the code to test the property kontaktname
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property kontakt (base name: "Kontakt")', function() {
      // uncomment below and update the code to test the property kontakt
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property kurs (base name: "Kurs")', function() {
      // uncomment below and update the code to test the property kurs
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property land (base name: "Land")', function() {
      // uncomment below and update the code to test the property land
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadresszeile1 (base name: "Lieferadresszeile1")', function() {
      // uncomment below and update the code to test the property lieferadresszeile1
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadresszeile2 (base name: "Lieferadresszeile2")', function() {
      // uncomment below and update the code to test the property lieferadresszeile2
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadresszeile3 (base name: "Lieferadresszeile3")', function() {
      // uncomment below and update the code to test the property lieferadresszeile3
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadresszeile4 (base name: "Lieferadresszeile4")', function() {
      // uncomment below and update the code to test the property lieferadresszeile4
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadresszeile5 (base name: "Lieferadresszeile5")', function() {
      // uncomment below and update the code to test the property lieferadresszeile5
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadresse (base name: "Lieferadresse")', function() {
      // uncomment below and update the code to test the property lieferadresse
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressAnrede (base name: "LieferadressAnrede")', function() {
      // uncomment below and update the code to test the property lieferadressAnrede
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferart (base name: "Lieferart")', function() {
      // uncomment below and update the code to test the property lieferart
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressEMail (base name: "LieferadressEMail")', function() {
      // uncomment below and update the code to test the property lieferadressEMail
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressRegion (base name: "LieferadressRegion")', function() {
      // uncomment below and update the code to test the property lieferadressRegion
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressKontaktname (base name: "LieferadressKontaktname")', function() {
      // uncomment below and update the code to test the property lieferadressKontaktname
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressKontakt (base name: "LieferadressKontakt")', function() {
      // uncomment below and update the code to test the property lieferadressKontakt
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressLand (base name: "LieferadressLand")', function() {
      // uncomment below and update the code to test the property lieferadressLand
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressName (base name: "LieferadressName")', function() {
      // uncomment below and update the code to test the property lieferadressName
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressOrt (base name: "LieferadressOrt")', function() {
      // uncomment below and update the code to test the property lieferadressOrt
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressPLZ (base name: "LieferadressPLZ")', function() {
      // uncomment below and update the code to test the property lieferadressPLZ
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressPLZPostfach (base name: "LieferadressPLZPostfach")', function() {
      // uncomment below and update the code to test the property lieferadressPLZPostfach
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressPostfach (base name: "LieferadressPostfach")', function() {
      // uncomment below and update the code to test the property lieferadressPostfach
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressStrasse (base name: "LieferadressStrasse")', function() {
      // uncomment below and update the code to test the property lieferadressStrasse
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressTelefon (base name: "LieferadressTelefon")', function() {
      // uncomment below and update the code to test the property lieferadressTelefon
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property liefertermin (base name: "Liefertermin")', function() {
      // uncomment below and update the code to test the property liefertermin
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property lieferadressVorname (base name: "LieferadressVorname")', function() {
      // uncomment below and update the code to test the property lieferadressVorname
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property marge (base name: "Marge")', function() {
      // uncomment below and update the code to test the property marge
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property ort (base name: "Ort")', function() {
      // uncomment below and update the code to test the property ort
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property PLZ (base name: "PLZ")', function() {
      // uncomment below and update the code to test the property PLZ
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property pLZPostfach (base name: "PLZPostfach")', function() {
      // uncomment below and update the code to test the property pLZPostfach
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property portoErtrag (base name: "PortoErtrag")', function() {
      // uncomment below and update the code to test the property portoErtrag
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property portoFW (base name: "PortoFW")', function() {
      // uncomment below and update the code to test the property portoFW
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property portoKostenart (base name: "PortoKostenart")', function() {
      // uncomment below and update the code to test the property portoKostenart
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property portoKostenstelle (base name: "PortoKostenstelle")', function() {
      // uncomment below and update the code to test the property portoKostenstelle
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property portoMWStFW (base name: "PortoMWStFW")', function() {
      // uncomment below and update the code to test the property portoMWStFW
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property portoMWStSW (base name: "PortoMWStSW")', function() {
      // uncomment below and update the code to test the property portoMWStSW
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property portoSteuercode (base name: "PortoSteuercode")', function() {
      // uncomment below and update the code to test the property portoSteuercode
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property portoSW (base name: "PortoSW")', function() {
      // uncomment below and update the code to test the property portoSW
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property postfach (base name: "Postfach")', function() {
      // uncomment below and update the code to test the property postfach
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property belegdatum (base name: "Belegdatum")', function() {
      // uncomment below and update the code to test the property belegdatum
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadresszeile1 (base name: "Rechnungsadresszeile1")', function() {
      // uncomment below and update the code to test the property rechnungsadresszeile1
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadresszeile2 (base name: "Rechnungsadresszeile2")', function() {
      // uncomment below and update the code to test the property rechnungsadresszeile2
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadresszeile3 (base name: "Rechnungsadresszeile3")', function() {
      // uncomment below and update the code to test the property rechnungsadresszeile3
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadresszeile4 (base name: "Rechnungsadresszeile4")', function() {
      // uncomment below and update the code to test the property rechnungsadresszeile4
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadresszeile5 (base name: "Rechnungsadresszeile5")', function() {
      // uncomment below and update the code to test the property rechnungsadresszeile5
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadresse (base name: "Rechnungsadresse")', function() {
      // uncomment below and update the code to test the property rechnungsadresse
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressAnrede (base name: "RechnungsadressAnrede")', function() {
      // uncomment below and update the code to test the property rechnungsadressAnrede
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressRegion (base name: "RechnungsadressRegion")', function() {
      // uncomment below and update the code to test the property rechnungsadressRegion
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressKontaktname (base name: "RechnungsadressKontaktname")', function() {
      // uncomment below and update the code to test the property rechnungsadressKontaktname
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressKontakt (base name: "RechnungsadressKontakt")', function() {
      // uncomment below and update the code to test the property rechnungsadressKontakt
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressLand (base name: "RechnungsadressLand")', function() {
      // uncomment below and update the code to test the property rechnungsadressLand
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressName (base name: "RechnungsadressName")', function() {
      // uncomment below and update the code to test the property rechnungsadressName
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressOrt (base name: "RechnungsadressOrt")', function() {
      // uncomment below and update the code to test the property rechnungsadressOrt
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressPLZ (base name: "RechnungsadressPLZ")', function() {
      // uncomment below and update the code to test the property rechnungsadressPLZ
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressPLZPostfach (base name: "RechnungsadressPLZPostfach")', function() {
      // uncomment below and update the code to test the property rechnungsadressPLZPostfach
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressPostfach (base name: "RechnungsadressPostfach")', function() {
      // uncomment below and update the code to test the property rechnungsadressPostfach
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressStrasse (base name: "RechnungsadressStrasse")', function() {
      // uncomment below and update the code to test the property rechnungsadressStrasse
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property rechnungsadressVorname (base name: "RechnungsadressVorname")', function() {
      // uncomment below and update the code to test the property rechnungsadressVorname
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property referenztext (base name: "Referenztext")', function() {
      // uncomment below and update the code to test the property referenztext
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property sammelkonto (base name: "Sammelkonto")', function() {
      // uncomment below and update the code to test the property sammelkonto
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property stapelrechnung (base name: "Stapelrechnung")', function() {
      // uncomment below and update the code to test the property stapelrechnung
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerFW1 (base name: "SteuerFW1")', function() {
      // uncomment below and update the code to test the property steuerFW1
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerFW2 (base name: "SteuerFW2")', function() {
      // uncomment below and update the code to test the property steuerFW2
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerFW3 (base name: "SteuerFW3")', function() {
      // uncomment below and update the code to test the property steuerFW3
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerFW4 (base name: "SteuerFW4")', function() {
      // uncomment below and update the code to test the property steuerFW4
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerFW5 (base name: "SteuerFW5")', function() {
      // uncomment below and update the code to test the property steuerFW5
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuercode1 (base name: "Steuercode1")', function() {
      // uncomment below and update the code to test the property steuercode1
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuercode2 (base name: "Steuercode2")', function() {
      // uncomment below and update the code to test the property steuercode2
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuercode3 (base name: "Steuercode3")', function() {
      // uncomment below and update the code to test the property steuercode3
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuercode4 (base name: "Steuercode4")', function() {
      // uncomment below and update the code to test the property steuercode4
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuercode5 (base name: "Steuercode5")', function() {
      // uncomment below and update the code to test the property steuercode5
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerInklusiv1 (base name: "SteuerInklusiv1")', function() {
      // uncomment below and update the code to test the property steuerInklusiv1
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerInklusiv2 (base name: "SteuerInklusiv2")', function() {
      // uncomment below and update the code to test the property steuerInklusiv2
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerInklusiv3 (base name: "SteuerInklusiv3")', function() {
      // uncomment below and update the code to test the property steuerInklusiv3
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerInklusiv4 (base name: "SteuerInklusiv4")', function() {
      // uncomment below and update the code to test the property steuerInklusiv4
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerInklusiv5 (base name: "SteuerInklusiv5")', function() {
      // uncomment below and update the code to test the property steuerInklusiv5
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerMargen1 (base name: "SteuerMargen1")', function() {
      // uncomment below and update the code to test the property steuerMargen1
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerMargen2 (base name: "SteuerMargen2")', function() {
      // uncomment below and update the code to test the property steuerMargen2
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerMargen3 (base name: "SteuerMargen3")', function() {
      // uncomment below and update the code to test the property steuerMargen3
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerMargen4 (base name: "SteuerMargen4")', function() {
      // uncomment below and update the code to test the property steuerMargen4
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerMargen5 (base name: "SteuerMargen5")', function() {
      // uncomment below and update the code to test the property steuerMargen5
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerSW1 (base name: "SteuerSW1")', function() {
      // uncomment below and update the code to test the property steuerSW1
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerSW2 (base name: "SteuerSW2")', function() {
      // uncomment below and update the code to test the property steuerSW2
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerSW3 (base name: "SteuerSW3")', function() {
      // uncomment below and update the code to test the property steuerSW3
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerSW4 (base name: "SteuerSW4")', function() {
      // uncomment below and update the code to test the property steuerSW4
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuerSW5 (base name: "SteuerSW5")', function() {
      // uncomment below and update the code to test the property steuerSW5
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuertext1 (base name: "Steuertext1")', function() {
      // uncomment below and update the code to test the property steuertext1
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuertext2 (base name: "Steuertext2")', function() {
      // uncomment below and update the code to test the property steuertext2
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuertext3 (base name: "Steuertext3")', function() {
      // uncomment below and update the code to test the property steuertext3
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuertext4 (base name: "Steuertext4")', function() {
      // uncomment below and update the code to test the property steuertext4
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuertext5 (base name: "Steuertext5")', function() {
      // uncomment below and update the code to test the property steuertext5
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuertotalFW1 (base name: "SteuertotalFW1")', function() {
      // uncomment below and update the code to test the property steuertotalFW1
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuertotalFW2 (base name: "SteuertotalFW2")', function() {
      // uncomment below and update the code to test the property steuertotalFW2
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuertotalFW3 (base name: "SteuertotalFW3")', function() {
      // uncomment below and update the code to test the property steuertotalFW3
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuertotalFW4 (base name: "SteuertotalFW4")', function() {
      // uncomment below and update the code to test the property steuertotalFW4
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuertotalFW5 (base name: "SteuertotalFW5")', function() {
      // uncomment below and update the code to test the property steuertotalFW5
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuertotalSW1 (base name: "SteuertotalSW1")', function() {
      // uncomment below and update the code to test the property steuertotalSW1
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuertotalSW2 (base name: "SteuertotalSW2")', function() {
      // uncomment below and update the code to test the property steuertotalSW2
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuertotalSW3 (base name: "SteuertotalSW3")', function() {
      // uncomment below and update the code to test the property steuertotalSW3
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuertotalSW4 (base name: "SteuertotalSW4")', function() {
      // uncomment below and update the code to test the property steuertotalSW4
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property steuertotalSW5 (base name: "SteuertotalSW5")', function() {
      // uncomment below and update the code to test the property steuertotalSW5
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property strasse (base name: "Strasse")', function() {
      // uncomment below and update the code to test the property strasse
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property subtotaldifferenzFW (base name: "SubtotaldifferenzFW")', function() {
      // uncomment below and update the code to test the property subtotaldifferenzFW
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property subtotaldifferenzSW (base name: "SubtotaldifferenzSW")', function() {
      // uncomment below and update the code to test the property subtotaldifferenzSW
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property totalEinkaufspreisFW (base name: "TotalEinkaufspreisFW")', function() {
      // uncomment below and update the code to test the property totalEinkaufspreisFW
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property totalEinkaufspreisSW (base name: "TotalEinkaufspreisSW")', function() {
      // uncomment below and update the code to test the property totalEinkaufspreisSW
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property totalFW (base name: "TotalFW")', function() {
      // uncomment below and update the code to test the property totalFW
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property totalgewicht (base name: "Totalgewicht")', function() {
      // uncomment below and update the code to test the property totalgewicht
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property totalsteuerFW (base name: "TotalsteuerFW")', function() {
      // uncomment below and update the code to test the property totalsteuerFW
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property totalsteuerSW (base name: "TotalsteuerSW")', function() {
      // uncomment below and update the code to test the property totalsteuerSW
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property totalSW (base name: "TotalSW")', function() {
      // uncomment below and update the code to test the property totalSW
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property unserZeichen (base name: "UnserZeichen")', function() {
      // uncomment below and update the code to test the property unserZeichen
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property vertreter (base name: "Vertreter")', function() {
      // uncomment below and update the code to test the property vertreter
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property verwaltungsadresse (base name: "Verwaltungsadresse")', function() {
      // uncomment below and update the code to test the property verwaltungsadresse
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property vorname (base name: "Vorname")', function() {
      // uncomment below and update the code to test the property vorname
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property vorauszahlungen (base name: "Vorauszahlungen")', function() {
      // uncomment below and update the code to test the property vorauszahlungen
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property waehrung (base name: "Waehrung")', function() {
      // uncomment below and update the code to test the property waehrung
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property zuschlag (base name: "Zuschlag")', function() {
      // uncomment below and update the code to test the property zuschlag
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property zuschlagErtragskonto (base name: "ZuschlagErtragskonto")', function() {
      // uncomment below and update the code to test the property zuschlagErtragskonto
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property zuschlagFW (base name: "ZuschlagFW")', function() {
      // uncomment below and update the code to test the property zuschlagFW
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property zuschlagKostenart (base name: "ZuschlagKostenart")', function() {
      // uncomment below and update the code to test the property zuschlagKostenart
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property zuschlagKostenstelle (base name: "ZuschlagKostenstelle")', function() {
      // uncomment below and update the code to test the property zuschlagKostenstelle
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property zuschlagMWStFW (base name: "ZuschlagMWStFW")', function() {
      // uncomment below and update the code to test the property zuschlagMWStFW
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property zuschlagMWStSW (base name: "ZuschlagMWStSW")', function() {
      // uncomment below and update the code to test the property zuschlagMWStSW
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property zuschlagSteuercode (base name: "ZuschlagSteuercode")', function() {
      // uncomment below and update the code to test the property zuschlagSteuercode
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property zuschlagSW (base name: "ZuschlagSW")', function() {
      // uncomment below and update the code to test the property zuschlagSW
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

    it('should have the property positionen (base name: "Positionen")', function() {
      // uncomment below and update the code to test the property positionen
      //var instance = new ProffixRestApiRequestSammlung.AUFDokumentDokumentNrteilrechnungerstellenRequest();
      //expect(instance).to.be();
    });

  });

}));
