/**
 * PROFFIX REST API Request Sammlung
 * Dies ist eine Request-Sammlung der PROFFIX REST API, welche das PROFFIX REST API Entwicklerhandbuch unter [https://www.proffix.net/entwickler/restapi/handbuch](https://www.proffix.net/entwickler/restapi/handbuch) erg√§nzt.
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Konto3'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Konto3'));
  } else {
    // Browser globals (root is window)
    if (!root.ProffixRestApiRequestSammlung) {
      root.ProffixRestApiRequestSammlung = {};
    }
    root.ProffixRestApiRequestSammlung.SteuercodeEinkauf = factory(root.ProffixRestApiRequestSammlung.ApiClient, root.ProffixRestApiRequestSammlung.Konto3);
  }
}(this, function(ApiClient, Konto3) {
  'use strict';




  /**
   * The SteuercodeEinkauf model module.
   * @module model/SteuercodeEinkauf
   * @version 1.0
   */

  /**
   * Constructs a new <code>SteuercodeEinkauf</code>.
   * @alias module:model/SteuercodeEinkauf
   * @class
   * @param steuercodeNr {Number} 
   * @param bezeichnung {String} 
   * @param prozent {Number} 
   * @param inklusivMWST {Boolean} 
   * @param konto {module:model/Konto3} 
   * @param gueltigVon {String} 
   * @param gueltigBis {String} 
   * @param ersatzsteuercode {String} 
   * @param ankauf {Boolean} 
   * @param bezugsteuerkonto {String} 
   * @param investition {Boolean} 
   * @param dienstleistungAusland {Boolean} 
   * @param nichtSkontoberechtigt {Boolean} 
   * @param saldosteuersatz {Number} 
   * @param margenbesteuerung {Boolean} 
   * @param subventionen {Boolean} 
   * @param umsatzsteuercode {String} 
   * @param vorsteuer {Boolean} 
   * @param zahlProzent {Number} 
   * @param erstelltAm {String} 
   * @param erstelltVon {String} 
   * @param geaendertAm {String} 
   * @param geaendertVon {String} 
   * @param zusatzfelder {Object} 
   */
  var exports = function(steuercodeNr, bezeichnung, prozent, inklusivMWST, konto, gueltigVon, gueltigBis, ersatzsteuercode, ankauf, bezugsteuerkonto, investition, dienstleistungAusland, nichtSkontoberechtigt, saldosteuersatz, margenbesteuerung, subventionen, umsatzsteuercode, vorsteuer, zahlProzent, erstelltAm, erstelltVon, geaendertAm, geaendertVon, zusatzfelder) {
    var _this = this;

    _this['SteuercodeNr'] = steuercodeNr;
    _this['Bezeichnung'] = bezeichnung;
    _this['Prozent'] = prozent;
    _this['InklusivMWST'] = inklusivMWST;
    _this['Konto'] = konto;
    _this['GueltigVon'] = gueltigVon;
    _this['GueltigBis'] = gueltigBis;
    _this['Ersatzsteuercode'] = ersatzsteuercode;
    _this['Ankauf'] = ankauf;
    _this['Bezugsteuerkonto'] = bezugsteuerkonto;
    _this['Investition'] = investition;
    _this['DienstleistungAusland'] = dienstleistungAusland;
    _this['NichtSkontoberechtigt'] = nichtSkontoberechtigt;
    _this['Saldosteuersatz'] = saldosteuersatz;
    _this['Margenbesteuerung'] = margenbesteuerung;
    _this['Subventionen'] = subventionen;
    _this['Umsatzsteuercode'] = umsatzsteuercode;
    _this['Vorsteuer'] = vorsteuer;
    _this['ZahlProzent'] = zahlProzent;
    _this['ErstelltAm'] = erstelltAm;
    _this['ErstelltVon'] = erstelltVon;
    _this['GeaendertAm'] = geaendertAm;
    _this['GeaendertVon'] = geaendertVon;
    _this['Zusatzfelder'] = zusatzfelder;
  };

  /**
   * Constructs a <code>SteuercodeEinkauf</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SteuercodeEinkauf} obj Optional instance to populate.
   * @return {module:model/SteuercodeEinkauf} The populated <code>SteuercodeEinkauf</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('SteuercodeNr')) {
        obj['SteuercodeNr'] = ApiClient.convertToType(data['SteuercodeNr'], 'Number');
      }
      if (data.hasOwnProperty('Bezeichnung')) {
        obj['Bezeichnung'] = ApiClient.convertToType(data['Bezeichnung'], 'String');
      }
      if (data.hasOwnProperty('Prozent')) {
        obj['Prozent'] = ApiClient.convertToType(data['Prozent'], 'Number');
      }
      if (data.hasOwnProperty('InklusivMWST')) {
        obj['InklusivMWST'] = ApiClient.convertToType(data['InklusivMWST'], 'Boolean');
      }
      if (data.hasOwnProperty('Konto')) {
        obj['Konto'] = Konto3.constructFromObject(data['Konto']);
      }
      if (data.hasOwnProperty('GueltigVon')) {
        obj['GueltigVon'] = ApiClient.convertToType(data['GueltigVon'], 'String');
      }
      if (data.hasOwnProperty('GueltigBis')) {
        obj['GueltigBis'] = ApiClient.convertToType(data['GueltigBis'], 'String');
      }
      if (data.hasOwnProperty('Ersatzsteuercode')) {
        obj['Ersatzsteuercode'] = ApiClient.convertToType(data['Ersatzsteuercode'], 'String');
      }
      if (data.hasOwnProperty('Ankauf')) {
        obj['Ankauf'] = ApiClient.convertToType(data['Ankauf'], 'Boolean');
      }
      if (data.hasOwnProperty('Bezugsteuerkonto')) {
        obj['Bezugsteuerkonto'] = ApiClient.convertToType(data['Bezugsteuerkonto'], 'String');
      }
      if (data.hasOwnProperty('Investition')) {
        obj['Investition'] = ApiClient.convertToType(data['Investition'], 'Boolean');
      }
      if (data.hasOwnProperty('DienstleistungAusland')) {
        obj['DienstleistungAusland'] = ApiClient.convertToType(data['DienstleistungAusland'], 'Boolean');
      }
      if (data.hasOwnProperty('NichtSkontoberechtigt')) {
        obj['NichtSkontoberechtigt'] = ApiClient.convertToType(data['NichtSkontoberechtigt'], 'Boolean');
      }
      if (data.hasOwnProperty('Saldosteuersatz')) {
        obj['Saldosteuersatz'] = ApiClient.convertToType(data['Saldosteuersatz'], 'Number');
      }
      if (data.hasOwnProperty('Margenbesteuerung')) {
        obj['Margenbesteuerung'] = ApiClient.convertToType(data['Margenbesteuerung'], 'Boolean');
      }
      if (data.hasOwnProperty('Subventionen')) {
        obj['Subventionen'] = ApiClient.convertToType(data['Subventionen'], 'Boolean');
      }
      if (data.hasOwnProperty('Umsatzsteuercode')) {
        obj['Umsatzsteuercode'] = ApiClient.convertToType(data['Umsatzsteuercode'], 'String');
      }
      if (data.hasOwnProperty('Vorsteuer')) {
        obj['Vorsteuer'] = ApiClient.convertToType(data['Vorsteuer'], 'Boolean');
      }
      if (data.hasOwnProperty('ZahlProzent')) {
        obj['ZahlProzent'] = ApiClient.convertToType(data['ZahlProzent'], 'Number');
      }
      if (data.hasOwnProperty('ErstelltAm')) {
        obj['ErstelltAm'] = ApiClient.convertToType(data['ErstelltAm'], 'String');
      }
      if (data.hasOwnProperty('ErstelltVon')) {
        obj['ErstelltVon'] = ApiClient.convertToType(data['ErstelltVon'], 'String');
      }
      if (data.hasOwnProperty('GeaendertAm')) {
        obj['GeaendertAm'] = ApiClient.convertToType(data['GeaendertAm'], 'String');
      }
      if (data.hasOwnProperty('GeaendertVon')) {
        obj['GeaendertVon'] = ApiClient.convertToType(data['GeaendertVon'], 'String');
      }
      if (data.hasOwnProperty('Zusatzfelder')) {
        obj['Zusatzfelder'] = ApiClient.convertToType(data['Zusatzfelder'], Object);
      }
    }
    return obj;
  }

  /**
   * @member {Number} SteuercodeNr
   */
  exports.prototype['SteuercodeNr'] = undefined;
  /**
   * @member {String} Bezeichnung
   */
  exports.prototype['Bezeichnung'] = undefined;
  /**
   * @member {Number} Prozent
   */
  exports.prototype['Prozent'] = undefined;
  /**
   * @member {Boolean} InklusivMWST
   */
  exports.prototype['InklusivMWST'] = undefined;
  /**
   * @member {module:model/Konto3} Konto
   */
  exports.prototype['Konto'] = undefined;
  /**
   * @member {String} GueltigVon
   */
  exports.prototype['GueltigVon'] = undefined;
  /**
   * @member {String} GueltigBis
   */
  exports.prototype['GueltigBis'] = undefined;
  /**
   * @member {String} Ersatzsteuercode
   */
  exports.prototype['Ersatzsteuercode'] = undefined;
  /**
   * @member {Boolean} Ankauf
   */
  exports.prototype['Ankauf'] = undefined;
  /**
   * @member {String} Bezugsteuerkonto
   */
  exports.prototype['Bezugsteuerkonto'] = undefined;
  /**
   * @member {Boolean} Investition
   */
  exports.prototype['Investition'] = undefined;
  /**
   * @member {Boolean} DienstleistungAusland
   */
  exports.prototype['DienstleistungAusland'] = undefined;
  /**
   * @member {Boolean} NichtSkontoberechtigt
   */
  exports.prototype['NichtSkontoberechtigt'] = undefined;
  /**
   * @member {Number} Saldosteuersatz
   */
  exports.prototype['Saldosteuersatz'] = undefined;
  /**
   * @member {Boolean} Margenbesteuerung
   */
  exports.prototype['Margenbesteuerung'] = undefined;
  /**
   * @member {Boolean} Subventionen
   */
  exports.prototype['Subventionen'] = undefined;
  /**
   * @member {String} Umsatzsteuercode
   */
  exports.prototype['Umsatzsteuercode'] = undefined;
  /**
   * @member {Boolean} Vorsteuer
   */
  exports.prototype['Vorsteuer'] = undefined;
  /**
   * @member {Number} ZahlProzent
   */
  exports.prototype['ZahlProzent'] = undefined;
  /**
   * @member {String} ErstelltAm
   */
  exports.prototype['ErstelltAm'] = undefined;
  /**
   * @member {String} ErstelltVon
   */
  exports.prototype['ErstelltVon'] = undefined;
  /**
   * @member {String} GeaendertAm
   */
  exports.prototype['GeaendertAm'] = undefined;
  /**
   * @member {String} GeaendertVon
   */
  exports.prototype['GeaendertVon'] = undefined;
  /**
   * @member {Object} Zusatzfelder
   */
  exports.prototype['Zusatzfelder'] = undefined;



  return exports;
}));


