/**
 * PROFFIX REST API Request Sammlung
 * Dies ist eine Request-Sammlung der PROFFIX REST API, welche das PROFFIX REST API Entwicklerhandbuch unter [https://www.proffix.net/entwickler/restapi/handbuch](https://www.proffix.net/entwickler/restapi/handbuch) erg√§nzt.
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/FIB1Buchung17BBuchungNr7D', 'model/FIB1BuchungRequest', 'model/FIB1Buchungsart17BBuchungsartNr7D', 'model/FIB1FibuStammdaten', 'model/FIB1Konto17BKontoNr7D', 'model/FIB1Konto17BKontoNr7D1Saldo', 'model/FIB1Konto1Saldo1Kontotyp17BKontotypNr7D', 'model/FIB1KontoRequest', 'model/FIB1Kontoklasse17BKontoklasseNr7D', 'model/FIB1KostenartRequest', 'model/FIB1KostenstelleRequest'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/FIB1Buchung17BBuchungNr7D'), require('../model/FIB1BuchungRequest'), require('../model/FIB1Buchungsart17BBuchungsartNr7D'), require('../model/FIB1FibuStammdaten'), require('../model/FIB1Konto17BKontoNr7D'), require('../model/FIB1Konto17BKontoNr7D1Saldo'), require('../model/FIB1Konto1Saldo1Kontotyp17BKontotypNr7D'), require('../model/FIB1KontoRequest'), require('../model/FIB1Kontoklasse17BKontoklasseNr7D'), require('../model/FIB1KostenartRequest'), require('../model/FIB1KostenstelleRequest'));
  } else {
    // Browser globals (root is window)
    if (!root.ProffixRestApiRequestSammlung) {
      root.ProffixRestApiRequestSammlung = {};
    }
    root.ProffixRestApiRequestSammlung.FIBApi = factory(root.ProffixRestApiRequestSammlung.ApiClient, root.ProffixRestApiRequestSammlung.FIB1Buchung17BBuchungNr7D, root.ProffixRestApiRequestSammlung.FIB1BuchungRequest, root.ProffixRestApiRequestSammlung.FIB1Buchungsart17BBuchungsartNr7D, root.ProffixRestApiRequestSammlung.FIB1FibuStammdaten, root.ProffixRestApiRequestSammlung.FIB1Konto17BKontoNr7D, root.ProffixRestApiRequestSammlung.FIB1Konto17BKontoNr7D1Saldo, root.ProffixRestApiRequestSammlung.FIB1Konto1Saldo1Kontotyp17BKontotypNr7D, root.ProffixRestApiRequestSammlung.FIB1KontoRequest, root.ProffixRestApiRequestSammlung.FIB1Kontoklasse17BKontoklasseNr7D, root.ProffixRestApiRequestSammlung.FIB1KostenartRequest, root.ProffixRestApiRequestSammlung.FIB1KostenstelleRequest);
  }
}(this, function(ApiClient, FIB1Buchung17BBuchungNr7D, FIB1BuchungRequest, FIB1Buchungsart17BBuchungsartNr7D, FIB1FibuStammdaten, FIB1Konto17BKontoNr7D, FIB1Konto17BKontoNr7D1Saldo, FIB1Konto1Saldo1Kontotyp17BKontotypNr7D, FIB1KontoRequest, FIB1Kontoklasse17BKontoklasseNr7D, FIB1KostenartRequest, FIB1KostenstelleRequest) {
  'use strict';

  /**
   * FIB service.
   * @module api/FIBApi
   * @version 1.0
   */

  /**
   * Constructs a new FIBApi. 
   * @alias module:api/FIBApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;



    /**
     * FIB/Buchung
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @param {module:model/FIB1BuchungRequest} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    this.fIBBuchungWithHttpInfo = function(contentType, pxSessionId, body) {
      var postBody = body;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling fIBBuchung");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling fIBBuchung");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling fIBBuchung");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/FIB/Buchung', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * FIB/Buchung
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @param {module:model/FIB1BuchungRequest} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    this.fIBBuchung = function(contentType, pxSessionId, body) {
      return this.fIBBuchungWithHttpInfo(contentType, pxSessionId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * FIB/Buchung/{BuchungNr}
     * @param {Number} depth 
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/FIB1Buchung17BBuchungNr7D} and HTTP response
     */
    this.fIBBuchungBuchungNrWithHttpInfo = function(depth, contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'depth' is set
      if (depth === undefined || depth === null) {
        throw new Error("Missing the required parameter 'depth' when calling fIBBuchungBuchungNr");
      }

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling fIBBuchungBuchungNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling fIBBuchungBuchungNr");
      }


      var pathParams = {
      };
      var queryParams = {
        'depth': depth,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = FIB1Buchung17BBuchungNr7D;

      return this.apiClient.callApi(
        '/FIB/Buchung/2892', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * FIB/Buchung/{BuchungNr}
     * @param {Number} depth 
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/FIB1Buchung17BBuchungNr7D}
     */
    this.fIBBuchungBuchungNr = function(depth, contentType, pxSessionId) {
      return this.fIBBuchungBuchungNrWithHttpInfo(depth, contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * FIB/Buchungsart/{BuchungsartNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/FIB1Buchungsart17BBuchungsartNr7D} and HTTP response
     */
    this.fIBBuchungsartBuchungsartNrWithHttpInfo = function(contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling fIBBuchungsartBuchungsartNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling fIBBuchungsartBuchungsartNr");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = FIB1Buchungsart17BBuchungsartNr7D;

      return this.apiClient.callApi(
        '/FIB/Buchungsart/0000', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * FIB/Buchungsart/{BuchungsartNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/FIB1Buchungsart17BBuchungsartNr7D}
     */
    this.fIBBuchungsartBuchungsartNr = function(contentType, pxSessionId) {
      return this.fIBBuchungsartBuchungsartNrWithHttpInfo(contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * FIB/FibuStammdaten
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/FIB1FibuStammdaten} and HTTP response
     */
    this.fIBFibuStammdatenWithHttpInfo = function(contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling fIBFibuStammdaten");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling fIBFibuStammdaten");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = FIB1FibuStammdaten;

      return this.apiClient.callApi(
        '/FIB/FibuStammdaten', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * FIB/FibuStammdaten
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/FIB1FibuStammdaten}
     */
    this.fIBFibuStammdaten = function(contentType, pxSessionId) {
      return this.fIBFibuStammdatenWithHttpInfo(contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * FIB/Konto
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @param {module:model/FIB1KontoRequest} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    this.fIBKontoWithHttpInfo = function(contentType, pxSessionId, body) {
      var postBody = body;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling fIBKonto");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling fIBKonto");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling fIBKonto");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/FIB/Konto', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * FIB/Konto
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @param {module:model/FIB1KontoRequest} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    this.fIBKonto = function(contentType, pxSessionId, body) {
      return this.fIBKontoWithHttpInfo(contentType, pxSessionId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * FIB/Konto/{KontoNr}
     * @param {Number} depth 
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/FIB1Konto17BKontoNr7D} and HTTP response
     */
    this.fIBKontoKontoNrWithHttpInfo = function(depth, contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'depth' is set
      if (depth === undefined || depth === null) {
        throw new Error("Missing the required parameter 'depth' when calling fIBKontoKontoNr");
      }

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling fIBKontoKontoNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling fIBKontoKontoNr");
      }


      var pathParams = {
      };
      var queryParams = {
        'depth': depth,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = FIB1Konto17BKontoNr7D;

      return this.apiClient.callApi(
        '/FIB/Konto/1000', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * FIB/Konto/{KontoNr}
     * @param {Number} depth 
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/FIB1Konto17BKontoNr7D}
     */
    this.fIBKontoKontoNr = function(depth, contentType, pxSessionId) {
      return this.fIBKontoKontoNrWithHttpInfo(depth, contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * FIB/Konto/{KontoNr}/Saldo
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/FIB1Konto17BKontoNr7D1Saldo} and HTTP response
     */
    this.fIBKontoKontoNrSaldoWithHttpInfo = function(contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling fIBKontoKontoNrSaldo");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling fIBKontoKontoNrSaldo");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = FIB1Konto17BKontoNr7D1Saldo;

      return this.apiClient.callApi(
        '/FIB/Konto/1000/Saldo', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * FIB/Konto/{KontoNr}/Saldo
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/FIB1Konto17BKontoNr7D1Saldo}
     */
    this.fIBKontoKontoNrSaldo = function(contentType, pxSessionId) {
      return this.fIBKontoKontoNrSaldoWithHttpInfo(contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * FIB/Konto/Saldo/Kontotyp/{KontotypNr}
     * @param {String} periode 
     * @param {String} vonDatum 
     * @param {String} bisDatum 
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<module:model/FIB1Konto1Saldo1Kontotyp17BKontotypNr7D>} and HTTP response
     */
    this.fIBKontoSaldoKontotypKontotypNrWithHttpInfo = function(periode, vonDatum, bisDatum, contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'periode' is set
      if (periode === undefined || periode === null) {
        throw new Error("Missing the required parameter 'periode' when calling fIBKontoSaldoKontotypKontotypNr");
      }

      // verify the required parameter 'vonDatum' is set
      if (vonDatum === undefined || vonDatum === null) {
        throw new Error("Missing the required parameter 'vonDatum' when calling fIBKontoSaldoKontotypKontotypNr");
      }

      // verify the required parameter 'bisDatum' is set
      if (bisDatum === undefined || bisDatum === null) {
        throw new Error("Missing the required parameter 'bisDatum' when calling fIBKontoSaldoKontotypKontotypNr");
      }

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling fIBKontoSaldoKontotypKontotypNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling fIBKontoSaldoKontotypKontotypNr");
      }


      var pathParams = {
      };
      var queryParams = {
        'periode': periode,
        'vonDatum': vonDatum,
        'bisDatum': bisDatum,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = [FIB1Konto1Saldo1Kontotyp17BKontotypNr7D];

      return this.apiClient.callApi(
        '/FIB/Konto/Saldo/Kontotyp/1', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * FIB/Konto/Saldo/Kontotyp/{KontotypNr}
     * @param {String} periode 
     * @param {String} vonDatum 
     * @param {String} bisDatum 
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Array.<module:model/FIB1Konto1Saldo1Kontotyp17BKontotypNr7D>}
     */
    this.fIBKontoSaldoKontotypKontotypNr = function(periode, vonDatum, bisDatum, contentType, pxSessionId) {
      return this.fIBKontoSaldoKontotypKontotypNrWithHttpInfo(periode, vonDatum, bisDatum, contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * FIB/Kontoklasse/{KontoklasseNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/FIB1Kontoklasse17BKontoklasseNr7D} and HTTP response
     */
    this.fIBKontoklasseKontoklasseNrWithHttpInfo = function(contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling fIBKontoklasseKontoklasseNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling fIBKontoklasseKontoklasseNr");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = FIB1Kontoklasse17BKontoklasseNr7D;

      return this.apiClient.callApi(
        '/FIB/Kontoklasse/1', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * FIB/Kontoklasse/{KontoklasseNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/FIB1Kontoklasse17BKontoklasseNr7D}
     */
    this.fIBKontoklasseKontoklasseNr = function(contentType, pxSessionId) {
      return this.fIBKontoklasseKontoklasseNrWithHttpInfo(contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * FIB/Kostenart
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @param {module:model/FIB1KostenartRequest} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    this.fIBKostenartWithHttpInfo = function(contentType, pxSessionId, body) {
      var postBody = body;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling fIBKostenart");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling fIBKostenart");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling fIBKostenart");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/FIB/Kostenart', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * FIB/Kostenart
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @param {module:model/FIB1KostenartRequest} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    this.fIBKostenart = function(contentType, pxSessionId, body) {
      return this.fIBKostenartWithHttpInfo(contentType, pxSessionId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * FIB/Kostenart/{KostenartNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    this.fIBKostenartKostenartNrWithHttpInfo = function(contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling fIBKostenartKostenartNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling fIBKostenartKostenartNr");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/FIB/Kostenart/KOART', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * FIB/Kostenart/{KostenartNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    this.fIBKostenartKostenartNr = function(contentType, pxSessionId) {
      return this.fIBKostenartKostenartNrWithHttpInfo(contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * FIB/Kostenstelle
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @param {module:model/FIB1KostenstelleRequest} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    this.fIBKostenstelleWithHttpInfo = function(contentType, pxSessionId, body) {
      var postBody = body;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling fIBKostenstelle");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling fIBKostenstelle");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling fIBKostenstelle");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/FIB/Kostenstelle', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * FIB/Kostenstelle
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @param {module:model/FIB1KostenstelleRequest} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    this.fIBKostenstelle = function(contentType, pxSessionId, body) {
      return this.fIBKostenstelleWithHttpInfo(contentType, pxSessionId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * FIB/Kostenstelle/{KostenstelleNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    this.fIBKostenstelleKostenstelleNrWithHttpInfo = function(contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling fIBKostenstelleKostenstelleNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling fIBKostenstelleKostenstelleNr");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/FIB/Kostenstelle/KOSTE', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * FIB/Kostenstelle/{KostenstelleNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    this.fIBKostenstelleKostenstelleNr = function(contentType, pxSessionId) {
      return this.fIBKostenstelleKostenstelleNrWithHttpInfo(contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * FIB/Kostenstellengruppe/{Kostenstellengruppe}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    this.fIBKostenstellengruppeKostenstellengruppeWithHttpInfo = function(contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling fIBKostenstellengruppeKostenstellengruppe");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling fIBKostenstellengruppeKostenstellengruppe");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/FIB/Kostenstellengruppe/Test', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * FIB/Kostenstellengruppe/{Kostenstellengruppe}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    this.fIBKostenstellengruppeKostenstellengruppe = function(contentType, pxSessionId) {
      return this.fIBKostenstellengruppeKostenstellengruppeWithHttpInfo(contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * FIB/Kostenstellenklasse/{Kostenstellenklasse}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    this.fIBKostenstellenklasseKostenstellenklasseWithHttpInfo = function(contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling fIBKostenstellenklasseKostenstellenklasse");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling fIBKostenstellenklasseKostenstellenklasse");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/FIB/Kostenstellenklasse/A', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * FIB/Kostenstellenklasse/{Kostenstellenklasse}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    this.fIBKostenstellenklasseKostenstellenklasse = function(contentType, pxSessionId) {
      return this.fIBKostenstellenklasseKostenstellenklasseWithHttpInfo(contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * FIB/Kostenstellenuntergruppe/{Kostenstellenuntergruppe}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    this.fIBKostenstellenuntergruppeKostenstellenuntergruppeWithHttpInfo = function(contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling fIBKostenstellenuntergruppeKostenstellenuntergruppe");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling fIBKostenstellenuntergruppeKostenstellenuntergruppe");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/FIB/Kostenstellenuntergruppe/UGRP', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * FIB/Kostenstellenuntergruppe/{Kostenstellenuntergruppe}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    this.fIBKostenstellenuntergruppeKostenstellenuntergruppe = function(contentType, pxSessionId) {
      return this.fIBKostenstellenuntergruppeKostenstellenuntergruppeWithHttpInfo(contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
  };

  return exports;
}));
