/**
 * PROFFIX REST API Request Sammlung
 * Dies ist eine Request-Sammlung der PROFFIX REST API, welche das PROFFIX REST API Entwicklerhandbuch unter [https://www.proffix.net/entwickler/restapi/handbuch](https://www.proffix.net/entwickler/restapi/handbuch) erg√§nzt.
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/LOH1Abteilung17BAbteilungNr7D', 'model/LOH1Kind17BKindNr7D', 'model/LOH1Krankentaggeldversicherungscode17BKrankentaggeldversicherungscodeNr7D', 'model/LOH1Lohnart17BLohnartNr7D', 'model/LOH1Lohnbewegung17BLohnbewegungNr7D', 'model/LOH1LohnbewegungRequest', 'model/LOH1Mitarbeiter17BMitarbeiterNr7D', 'model/LOH1MitarbeiterRequest', 'model/LOH1Quellensteuer17BQuellensteuerNr7D', 'model/LOH1Unfallversicherungscode17BUnfallversicherungscodeNr7D', 'model/LOH1Unfallzusatzversicherungscode17BUnfallzusatzversicherungscodeNr7D', 'model/LOH1Zivilstand17BZivilstandNr7D'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/LOH1Abteilung17BAbteilungNr7D'), require('../model/LOH1Kind17BKindNr7D'), require('../model/LOH1Krankentaggeldversicherungscode17BKrankentaggeldversicherungscodeNr7D'), require('../model/LOH1Lohnart17BLohnartNr7D'), require('../model/LOH1Lohnbewegung17BLohnbewegungNr7D'), require('../model/LOH1LohnbewegungRequest'), require('../model/LOH1Mitarbeiter17BMitarbeiterNr7D'), require('../model/LOH1MitarbeiterRequest'), require('../model/LOH1Quellensteuer17BQuellensteuerNr7D'), require('../model/LOH1Unfallversicherungscode17BUnfallversicherungscodeNr7D'), require('../model/LOH1Unfallzusatzversicherungscode17BUnfallzusatzversicherungscodeNr7D'), require('../model/LOH1Zivilstand17BZivilstandNr7D'));
  } else {
    // Browser globals (root is window)
    if (!root.ProffixRestApiRequestSammlung) {
      root.ProffixRestApiRequestSammlung = {};
    }
    root.ProffixRestApiRequestSammlung.LOHApi = factory(root.ProffixRestApiRequestSammlung.ApiClient, root.ProffixRestApiRequestSammlung.LOH1Abteilung17BAbteilungNr7D, root.ProffixRestApiRequestSammlung.LOH1Kind17BKindNr7D, root.ProffixRestApiRequestSammlung.LOH1Krankentaggeldversicherungscode17BKrankentaggeldversicherungscodeNr7D, root.ProffixRestApiRequestSammlung.LOH1Lohnart17BLohnartNr7D, root.ProffixRestApiRequestSammlung.LOH1Lohnbewegung17BLohnbewegungNr7D, root.ProffixRestApiRequestSammlung.LOH1LohnbewegungRequest, root.ProffixRestApiRequestSammlung.LOH1Mitarbeiter17BMitarbeiterNr7D, root.ProffixRestApiRequestSammlung.LOH1MitarbeiterRequest, root.ProffixRestApiRequestSammlung.LOH1Quellensteuer17BQuellensteuerNr7D, root.ProffixRestApiRequestSammlung.LOH1Unfallversicherungscode17BUnfallversicherungscodeNr7D, root.ProffixRestApiRequestSammlung.LOH1Unfallzusatzversicherungscode17BUnfallzusatzversicherungscodeNr7D, root.ProffixRestApiRequestSammlung.LOH1Zivilstand17BZivilstandNr7D);
  }
}(this, function(ApiClient, LOH1Abteilung17BAbteilungNr7D, LOH1Kind17BKindNr7D, LOH1Krankentaggeldversicherungscode17BKrankentaggeldversicherungscodeNr7D, LOH1Lohnart17BLohnartNr7D, LOH1Lohnbewegung17BLohnbewegungNr7D, LOH1LohnbewegungRequest, LOH1Mitarbeiter17BMitarbeiterNr7D, LOH1MitarbeiterRequest, LOH1Quellensteuer17BQuellensteuerNr7D, LOH1Unfallversicherungscode17BUnfallversicherungscodeNr7D, LOH1Unfallzusatzversicherungscode17BUnfallzusatzversicherungscodeNr7D, LOH1Zivilstand17BZivilstandNr7D) {
  'use strict';

  /**
   * LOH service.
   * @module api/LOHApi
   * @version 1.0
   */

  /**
   * Constructs a new LOHApi. 
   * @alias module:api/LOHApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;



    /**
     * LOH/Abteilung/{AbteilungNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LOH1Abteilung17BAbteilungNr7D} and HTTP response
     */
    this.lOHAbteilungAbteilungNrWithHttpInfo = function(contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling lOHAbteilungAbteilungNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling lOHAbteilungAbteilungNr");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = LOH1Abteilung17BAbteilungNr7D;

      return this.apiClient.callApi(
        '/LOH/Abteilung/1', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * LOH/Abteilung/{AbteilungNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LOH1Abteilung17BAbteilungNr7D}
     */
    this.lOHAbteilungAbteilungNr = function(contentType, pxSessionId) {
      return this.lOHAbteilungAbteilungNrWithHttpInfo(contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * LOH/Kind/{KindNr}
     * @param {Number} depth 
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LOH1Kind17BKindNr7D} and HTTP response
     */
    this.lOHKindKindNrWithHttpInfo = function(depth, contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'depth' is set
      if (depth === undefined || depth === null) {
        throw new Error("Missing the required parameter 'depth' when calling lOHKindKindNr");
      }

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling lOHKindKindNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling lOHKindKindNr");
      }


      var pathParams = {
      };
      var queryParams = {
        'depth': depth,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = LOH1Kind17BKindNr7D;

      return this.apiClient.callApi(
        '/LOH/Kind/1', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * LOH/Kind/{KindNr}
     * @param {Number} depth 
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LOH1Kind17BKindNr7D}
     */
    this.lOHKindKindNr = function(depth, contentType, pxSessionId) {
      return this.lOHKindKindNrWithHttpInfo(depth, contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * LOH/Kinderzulage/{KinderzulageNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    this.lOHKinderzulageKinderzulageNrWithHttpInfo = function(contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling lOHKinderzulageKinderzulageNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling lOHKinderzulageKinderzulageNr");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/LOH/Kinderzulage/1', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * LOH/Kinderzulage/{KinderzulageNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    this.lOHKinderzulageKinderzulageNr = function(contentType, pxSessionId) {
      return this.lOHKinderzulageKinderzulageNrWithHttpInfo(contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * LOH/Krankentaggeldversicherungscode/{KrankentaggeldversicherungscodeNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LOH1Krankentaggeldversicherungscode17BKrankentaggeldversicherungscodeNr7D} and HTTP response
     */
    this.lOHKrankentaggeldversicherungscodeKrankentaggeldversicherungscodeNrWithHttpInfo = function(contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling lOHKrankentaggeldversicherungscodeKrankentaggeldversicherungscodeNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling lOHKrankentaggeldversicherungscodeKrankentaggeldversicherungscodeNr");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = LOH1Krankentaggeldversicherungscode17BKrankentaggeldversicherungscodeNr7D;

      return this.apiClient.callApi(
        '/LOH/Krankentaggeldversicherungscode/A0', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * LOH/Krankentaggeldversicherungscode/{KrankentaggeldversicherungscodeNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LOH1Krankentaggeldversicherungscode17BKrankentaggeldversicherungscodeNr7D}
     */
    this.lOHKrankentaggeldversicherungscodeKrankentaggeldversicherungscodeNr = function(contentType, pxSessionId) {
      return this.lOHKrankentaggeldversicherungscodeKrankentaggeldversicherungscodeNrWithHttpInfo(contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * LOH/Lohnabrechnung/{LohnabrechnungNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    this.lOHLohnabrechnungLohnabrechnungNrWithHttpInfo = function(contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling lOHLohnabrechnungLohnabrechnungNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling lOHLohnabrechnungLohnabrechnungNr");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/LOH/Lohnabrechnung/2274', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * LOH/Lohnabrechnung/{LohnabrechnungNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    this.lOHLohnabrechnungLohnabrechnungNr = function(contentType, pxSessionId) {
      return this.lOHLohnabrechnungLohnabrechnungNrWithHttpInfo(contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * LOH/Lohnart/{LohnartNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LOH1Lohnart17BLohnartNr7D} and HTTP response
     */
    this.lOHLohnartLohnartNrWithHttpInfo = function(contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling lOHLohnartLohnartNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling lOHLohnartLohnartNr");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = LOH1Lohnart17BLohnartNr7D;

      return this.apiClient.callApi(
        '/LOH/Lohnart/1000.1', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * LOH/Lohnart/{LohnartNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LOH1Lohnart17BLohnartNr7D}
     */
    this.lOHLohnartLohnartNr = function(contentType, pxSessionId) {
      return this.lOHLohnartLohnartNrWithHttpInfo(contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * LOH/Lohnbewegung
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @param {module:model/LOH1LohnbewegungRequest} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    this.lOHLohnbewegungWithHttpInfo = function(contentType, pxSessionId, body) {
      var postBody = body;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling lOHLohnbewegung");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling lOHLohnbewegung");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling lOHLohnbewegung");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/LOH/Lohnbewegung', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * LOH/Lohnbewegung
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @param {module:model/LOH1LohnbewegungRequest} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    this.lOHLohnbewegung = function(contentType, pxSessionId, body) {
      return this.lOHLohnbewegungWithHttpInfo(contentType, pxSessionId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * LOH/Lohnbewegung/{LohnbewegungNr}
     * @param {Number} depth 
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LOH1Lohnbewegung17BLohnbewegungNr7D} and HTTP response
     */
    this.lOHLohnbewegungLohnbewegungNrWithHttpInfo = function(depth, contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'depth' is set
      if (depth === undefined || depth === null) {
        throw new Error("Missing the required parameter 'depth' when calling lOHLohnbewegungLohnbewegungNr");
      }

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling lOHLohnbewegungLohnbewegungNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling lOHLohnbewegungLohnbewegungNr");
      }


      var pathParams = {
      };
      var queryParams = {
        'depth': depth,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = LOH1Lohnbewegung17BLohnbewegungNr7D;

      return this.apiClient.callApi(
        '/LOH/Lohnbewegung/2274', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * LOH/Lohnbewegung/{LohnbewegungNr}
     * @param {Number} depth 
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LOH1Lohnbewegung17BLohnbewegungNr7D}
     */
    this.lOHLohnbewegungLohnbewegungNr = function(depth, contentType, pxSessionId) {
      return this.lOHLohnbewegungLohnbewegungNrWithHttpInfo(depth, contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * LOH/Mitarbeiter
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @param {module:model/LOH1MitarbeiterRequest} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    this.lOHMitarbeiterWithHttpInfo = function(contentType, pxSessionId, body) {
      var postBody = body;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling lOHMitarbeiter");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling lOHMitarbeiter");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling lOHMitarbeiter");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/LOH/Mitarbeiter', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * LOH/Mitarbeiter
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @param {module:model/LOH1MitarbeiterRequest} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    this.lOHMitarbeiter = function(contentType, pxSessionId, body) {
      return this.lOHMitarbeiterWithHttpInfo(contentType, pxSessionId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * LOH/Mitarbeiter/{MitarbeiterNr}
     * @param {Number} depth 
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LOH1Mitarbeiter17BMitarbeiterNr7D} and HTTP response
     */
    this.lOHMitarbeiterMitarbeiterNrWithHttpInfo = function(depth, contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'depth' is set
      if (depth === undefined || depth === null) {
        throw new Error("Missing the required parameter 'depth' when calling lOHMitarbeiterMitarbeiterNr");
      }

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling lOHMitarbeiterMitarbeiterNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling lOHMitarbeiterMitarbeiterNr");
      }


      var pathParams = {
      };
      var queryParams = {
        'depth': depth,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = LOH1Mitarbeiter17BMitarbeiterNr7D;

      return this.apiClient.callApi(
        '/LOH/Mitarbeiter/1', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * LOH/Mitarbeiter/{MitarbeiterNr}
     * @param {Number} depth 
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LOH1Mitarbeiter17BMitarbeiterNr7D}
     */
    this.lOHMitarbeiterMitarbeiterNr = function(depth, contentType, pxSessionId) {
      return this.lOHMitarbeiterMitarbeiterNrWithHttpInfo(depth, contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * LOH/Quellensteuer/{QuellensteuerNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LOH1Quellensteuer17BQuellensteuerNr7D} and HTTP response
     */
    this.lOHQuellensteuerQuellensteuerNrWithHttpInfo = function(contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling lOHQuellensteuerQuellensteuerNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling lOHQuellensteuerQuellensteuerNr");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = LOH1Quellensteuer17BQuellensteuerNr7D;

      return this.apiClient.callApi(
        '/LOH/Quellensteuer/100000', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * LOH/Quellensteuer/{QuellensteuerNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LOH1Quellensteuer17BQuellensteuerNr7D}
     */
    this.lOHQuellensteuerQuellensteuerNr = function(contentType, pxSessionId) {
      return this.lOHQuellensteuerQuellensteuerNrWithHttpInfo(contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * LOH/Unfallversicherungscode/{UnfallversicherungscodeNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LOH1Unfallversicherungscode17BUnfallversicherungscodeNr7D} and HTTP response
     */
    this.lOHUnfallversicherungscodeUnfallversicherungscodeNrWithHttpInfo = function(contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling lOHUnfallversicherungscodeUnfallversicherungscodeNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling lOHUnfallversicherungscodeUnfallversicherungscodeNr");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = LOH1Unfallversicherungscode17BUnfallversicherungscodeNr7D;

      return this.apiClient.callApi(
        '/LOH/Unfallversicherungscode/A0', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * LOH/Unfallversicherungscode/{UnfallversicherungscodeNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LOH1Unfallversicherungscode17BUnfallversicherungscodeNr7D}
     */
    this.lOHUnfallversicherungscodeUnfallversicherungscodeNr = function(contentType, pxSessionId) {
      return this.lOHUnfallversicherungscodeUnfallversicherungscodeNrWithHttpInfo(contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * LOH/Unfallzusatzversicherungscode/{UnfallzusatzversicherungscodeNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LOH1Unfallzusatzversicherungscode17BUnfallzusatzversicherungscodeNr7D} and HTTP response
     */
    this.lOHUnfallzusatzversicherungscodeUnfallzusatzversicherungscodeNrWithHttpInfo = function(contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling lOHUnfallzusatzversicherungscodeUnfallzusatzversicherungscodeNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling lOHUnfallzusatzversicherungscodeUnfallzusatzversicherungscodeNr");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = LOH1Unfallzusatzversicherungscode17BUnfallzusatzversicherungscodeNr7D;

      return this.apiClient.callApi(
        '/LOH/Unfallzusatzversicherungscode/A0', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * LOH/Unfallzusatzversicherungscode/{UnfallzusatzversicherungscodeNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LOH1Unfallzusatzversicherungscode17BUnfallzusatzversicherungscodeNr7D}
     */
    this.lOHUnfallzusatzversicherungscodeUnfallzusatzversicherungscodeNr = function(contentType, pxSessionId) {
      return this.lOHUnfallzusatzversicherungscodeUnfallzusatzversicherungscodeNrWithHttpInfo(contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * LOH/Zivilstand/{ZivilstandNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LOH1Zivilstand17BZivilstandNr7D} and HTTP response
     */
    this.lOHZivilstandZivilstandNrWithHttpInfo = function(contentType, pxSessionId) {
      var postBody = null;

      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling lOHZivilstandZivilstandNr");
      }

      // verify the required parameter 'pxSessionId' is set
      if (pxSessionId === undefined || pxSessionId === null) {
        throw new Error("Missing the required parameter 'pxSessionId' when calling lOHZivilstandZivilstandNr");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Content-Type': contentType,
        'PxSessionId': pxSessionId
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json; charset=utf-8'];
      var returnType = LOH1Zivilstand17BZivilstandNr7D;

      return this.apiClient.callApi(
        '/LOH/Zivilstand/1', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * LOH/Zivilstand/{ZivilstandNr}
     * @param {String} contentType 
     * @param {String} pxSessionId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LOH1Zivilstand17BZivilstandNr7D}
     */
    this.lOHZivilstandZivilstandNr = function(contentType, pxSessionId) {
      return this.lOHZivilstandZivilstandNrWithHttpInfo(contentType, pxSessionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
  };

  return exports;
}));
